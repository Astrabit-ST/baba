#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

require_relative 'lib/baba/stmt'
require_relative 'lib/baba/expr'

class BabaParser < Racc::Parser

module_eval(<<'...end baba_parser.ry/module_eval...', 'baba_parser.ry', 122)

...end baba_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    36,    88,    55,     9,     9,    74,    37,    28,    25,    39,
    56,    41,    42,   100,    87,    79,    97,    52,    54,    29,
    31,    30,    36,     8,    20,    76,     9,    19,    34,    28,
    25,    21,    35,    76,    10,    23,    33,    32,    57,    58,
    22,    29,    31,    30,    24,     8,    20,    59,     9,    19,
    34,    61,    64,    21,    35,    65,    10,    23,    33,    32,
    36,     9,    22,    68,    70,    78,    24,    28,    25,    81,
    82,    83,    84,     9,    25,    70,   101,    78,   nil,    29,
    31,    30,    36,     8,    20,   nil,     9,    19,    34,    28,
    25,    21,    35,   nil,    10,    23,    33,    32,   nil,   nil,
    22,    29,    31,    30,    24,   nil,    20,   nil,    36,    19,
    34,   nil,   nil,    21,    35,    28,    25,    23,    33,    32,
   nil,   nil,    22,   nil,   nil,   nil,    24,    29,    31,    30,
    36,   nil,    20,   nil,   nil,    19,    34,    28,    25,    21,
    35,   nil,   nil,    23,    33,    32,   nil,   nil,    22,    29,
    31,    30,    24,     8,    20,   nil,     9,    19,    34,   nil,
   nil,    21,    35,   nil,    10,    23,    33,    32,    63,    36,
    22,   nil,   nil,   nil,    24,   nil,    28,    25,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    31,
    30,    36,   nil,    20,   nil,   nil,    19,    34,    28,    25,
    21,    35,   nil,   nil,    23,    33,    32,   nil,   nil,    22,
    29,    31,    30,    24,   nil,    20,   nil,    36,    19,    34,
   nil,   nil,    21,    35,    28,    25,    23,    33,    32,   nil,
   nil,    22,   nil,   nil,   nil,    24,    29,    31,    30,    36,
   nil,    20,   nil,   nil,    19,    34,    28,    25,    21,    35,
   nil,   nil,    23,    33,    32,   nil,   nil,    22,    29,    31,
    30,    24,   nil,    20,   nil,    36,    19,    34,   nil,   nil,
    21,    35,    28,    25,    23,    33,    32,   nil,   nil,    22,
   nil,   nil,   nil,    24,    29,    31,    30,    36,   nil,    20,
   nil,   nil,    19,    34,    28,    25,    21,    35,   nil,   nil,
    23,    33,    32,   nil,   nil,    22,    29,    31,    30,    24,
   nil,    20,   nil,    36,    19,    34,   nil,   nil,    21,    35,
    28,   nil,    23,    33,    32,   nil,   nil,    22,   nil,   nil,
   nil,    24,    29,    31,    30,    36,   nil,   nil,   nil,   nil,
   nil,    34,    28,   nil,   nil,    35,   nil,    10,   nil,    33,
    32,   nil,   nil,   nil,    29,    31,    30,    36,   nil,   nil,
   nil,   nil,   nil,    34,    28,   nil,   nil,    35,   nil,   nil,
   nil,    33,    32,   nil,   nil,   nil,    29,    31,    30,    36,
   nil,   nil,   nil,   nil,   nil,    34,    28,   nil,   nil,    35,
   nil,   nil,   nil,    33,    32,   nil,   nil,   nil,    29,    31,
    30,    36,   nil,   nil,   nil,   nil,   nil,    34,    28,   nil,
   nil,    35,   nil,   nil,   nil,    33,    32,   nil,   nil,   nil,
    29,    31,    30,    36,   nil,   nil,   nil,   nil,   nil,    34,
    28,   nil,   nil,    35,   nil,   nil,   nil,    33,    32,   nil,
   nil,   nil,    29,    31,    30,    36,   nil,   nil,   nil,   nil,
   nil,    34,    28,   nil,   nil,    35,   nil,   nil,   nil,    33,
    32,   nil,   nil,   nil,    29,    31,    30,    36,   nil,   nil,
   nil,   nil,   nil,    34,    28,   nil,   nil,    35,   nil,   nil,
   nil,    33,    32,   nil,   nil,   nil,    29,    31,    30,    36,
   nil,   nil,   nil,   nil,   nil,    34,    28,   nil,   nil,    35,
   nil,   nil,   nil,    33,    32,   nil,   nil,   nil,    29,    31,
    30,    36,   nil,   nil,   nil,   nil,   nil,    34,    28,   nil,
   nil,    35,   nil,   nil,   nil,    33,    32,   nil,   nil,   nil,
    29,    31,    30,    36,   nil,   nil,   nil,   nil,   nil,    34,
    28,   nil,   nil,    35,   nil,   nil,   nil,    33,    32,   nil,
   nil,   nil,    29,    31,    30,    36,   nil,   nil,   nil,   nil,
   nil,    34,    28,   nil,   nil,    35,   nil,   nil,   nil,    33,
    32,   nil,   nil,   nil,    29,    31,    30,   nil,   nil,   nil,
   nil,   nil,   nil,    34,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    33,    32 ]

racc_action_check = [
     0,    77,    39,    66,    90,    60,     1,     0,     0,     8,
    39,     9,    10,    94,    77,    66,    90,    35,    37,     0,
     0,     0,     2,     0,     0,    60,     0,     0,     0,     2,
     2,     0,     0,    94,     0,     0,     0,     0,    41,    42,
     0,     2,     2,     2,     0,     2,     2,    43,     2,     2,
     2,    48,    52,     2,     2,    53,     2,     2,     2,     2,
    25,    55,     2,    56,    57,    61,     2,    25,    25,    68,
    69,    70,    72,    81,    82,    83,    95,    96,   nil,    25,
    25,    25,    46,    25,    25,   nil,    25,    25,    25,    46,
    46,    25,    25,   nil,    25,    25,    25,    25,   nil,   nil,
    25,    46,    46,    46,    25,   nil,    46,   nil,    49,    46,
    46,   nil,   nil,    46,    46,    49,    49,    46,    46,    46,
   nil,   nil,    46,   nil,   nil,   nil,    46,    49,    49,    49,
    51,   nil,    49,   nil,   nil,    49,    49,    51,    51,    49,
    49,   nil,   nil,    49,    49,    49,   nil,   nil,    49,    51,
    51,    51,    49,    51,    51,   nil,    51,    51,    51,   nil,
   nil,    51,    51,   nil,    51,    51,    51,    51,    51,    74,
    51,   nil,   nil,   nil,    51,   nil,    74,    74,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    74,    74,
    74,    86,   nil,    74,   nil,   nil,    74,    74,    86,    86,
    74,    74,   nil,   nil,    74,    74,    74,   nil,   nil,    74,
    86,    86,    86,    74,   nil,    86,   nil,    88,    86,    86,
   nil,   nil,    86,    86,    88,    88,    86,    86,    86,   nil,
   nil,    86,   nil,   nil,   nil,    86,    88,    88,    88,    89,
   nil,    88,   nil,   nil,    88,    88,    89,    89,    88,    88,
   nil,   nil,    88,    88,    88,   nil,   nil,    88,    89,    89,
    89,    88,   nil,    89,   nil,    93,    89,    89,   nil,   nil,
    89,    89,    93,    93,    89,    89,    89,   nil,   nil,    89,
   nil,   nil,   nil,    89,    93,    93,    93,   100,   nil,    93,
   nil,   nil,    93,    93,   100,   100,    93,    93,   nil,   nil,
    93,    93,    93,   nil,   nil,    93,   100,   100,   100,    93,
   nil,   100,   nil,    19,   100,   100,   nil,   nil,   100,   100,
    19,   nil,   100,   100,   100,   nil,   nil,   100,   nil,   nil,
   nil,   100,    19,    19,    19,    20,   nil,   nil,   nil,   nil,
   nil,    19,    20,   nil,   nil,    19,   nil,    19,   nil,    19,
    19,   nil,   nil,   nil,    20,    20,    20,    21,   nil,   nil,
   nil,   nil,   nil,    20,    21,   nil,   nil,    20,   nil,   nil,
   nil,    20,    20,   nil,   nil,   nil,    21,    21,    21,    22,
   nil,   nil,   nil,   nil,   nil,    21,    22,   nil,   nil,    21,
   nil,   nil,   nil,    21,    21,   nil,   nil,   nil,    22,    22,
    22,    23,   nil,   nil,   nil,   nil,   nil,    22,    23,   nil,
   nil,    22,   nil,   nil,   nil,    22,    22,   nil,   nil,   nil,
    23,    23,    23,    24,   nil,   nil,   nil,   nil,   nil,    23,
    24,   nil,   nil,    23,   nil,   nil,   nil,    23,    23,   nil,
   nil,   nil,    24,    24,    24,    36,   nil,   nil,   nil,   nil,
   nil,    24,    36,   nil,   nil,    24,   nil,   nil,   nil,    24,
    24,   nil,   nil,   nil,    36,    36,    36,    58,   nil,   nil,
   nil,   nil,   nil,    36,    58,   nil,   nil,    36,   nil,   nil,
   nil,    36,    36,   nil,   nil,   nil,    58,    58,    58,    59,
   nil,   nil,   nil,   nil,   nil,    58,    59,   nil,   nil,    58,
   nil,   nil,   nil,    58,    58,   nil,   nil,   nil,    59,    59,
    59,    76,   nil,   nil,   nil,   nil,   nil,    59,    76,   nil,
   nil,    59,   nil,   nil,   nil,    59,    59,   nil,   nil,   nil,
    76,    76,    76,    78,   nil,   nil,   nil,   nil,   nil,    76,
    78,   nil,   nil,    76,   nil,   nil,   nil,    76,    76,   nil,
   nil,   nil,    78,    78,    78,    84,   nil,   nil,   nil,   nil,
   nil,    78,    84,   nil,   nil,    78,   nil,   nil,   nil,    78,
    78,   nil,   nil,   nil,    84,    84,    84,   nil,   nil,   nil,
   nil,   nil,   nil,    84,   nil,   nil,   nil,    84,   nil,   nil,
   nil,    84,    84 ]

racc_action_pointer = [
    -2,     6,    20,   nil,   nil,   nil,   nil,   nil,   -15,   -10,
    -9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   311,
   333,   355,   377,   399,   421,    58,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   443,    18,   nil,    -8,
   nil,    36,    24,    43,   nil,   nil,    80,   nil,    41,   106,
   nil,   128,    31,    52,   nil,    33,    39,    43,   465,   487,
   -22,    22,   nil,   nil,   nil,   nil,   -25,   nil,    59,    67,
    67,   nil,    68,   nil,   167,   nil,   509,   -26,   531,   nil,
   nil,    45,    64,    54,   553,   nil,   189,   nil,   215,   237,
   -24,   nil,   nil,   263,   -14,    36,    34,   nil,   nil,   nil,
   285,   nil,   nil,   nil ]

racc_action_default = [
    -6,   -62,    -1,    -2,    -3,    -4,    -5,    -7,   -62,   -62,
   -62,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -30,
   -62,   -40,   -62,   -62,   -46,    -6,   -49,   -50,   -53,   -54,
   -55,   -56,   -57,   -58,   -59,   -62,   -62,   -62,    -8,   -62,
   -11,   -62,   -15,   -62,   -31,   -32,   -62,   -39,   -62,   -62,
   -47,   -62,   -62,   -62,   104,   -12,   -62,   -18,   -62,   -51,
   -33,   -62,   -45,   -48,   -60,   -61,   -62,   -13,   -62,   -62,
   -20,   -16,   -62,   -52,   -62,   -35,   -62,   -62,   -62,    -9,
   -14,   -12,   -62,   -18,   -51,   -34,   -62,   -41,   -62,   -62,
   -62,   -17,   -19,   -62,   -37,   -62,   -43,   -10,   -29,   -36,
   -62,   -42,   -44,   -38 ]

racc_goto_table = [
    45,    46,    47,    48,    49,    50,    60,    38,    77,    62,
    67,    66,    69,    75,     1,    44,     2,    53,    40,    72,
    91,    80,    43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    85,   nil,    67,    90,    92,    71,
    73,    51,   nil,   102,    93,    80,    94,    99,    95,    96,
   nil,   nil,   nil,    98,   nil,   nil,    38,    86,   nil,    89,
   103,   nil,   nil,   nil,   nil,    73 ]

racc_goto_check = [
    10,    10,    10,    10,    10,    10,     7,     3,    22,     7,
     5,     8,    11,    21,     1,     6,     2,    10,     9,    20,
    12,     5,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,     5,     8,    11,    10,
    10,     2,   nil,    22,    20,     5,     7,    21,     7,     7,
   nil,   nil,   nil,     7,   nil,   nil,     3,    10,   nil,    10,
     7,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,    14,    16,     5,   nil,   -45,    -4,   -40,   -44,     9,
   -19,   -45,   -62,   nil,   nil,   nil,   nil,   nil,   nil,     3,
   -40,   -47,   -53,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     7,     3,     4,     5,     6,   nil,   nil,
    11,   nil,    18,    12,    13,    14,    15,    16,    17,   nil,
   nil,   nil,   nil,    26,    27 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 49, :_reduce_none,
  1, 51, :_reduce_2,
  1, 51, :_reduce_3,
  1, 51, :_reduce_4,
  1, 51, :_reduce_5,
  0, 50, :_reduce_none,
  1, 50, :_reduce_7,
  2, 50, :_reduce_8,
  5, 52, :_reduce_9,
  7, 52, :_reduce_10,
  2, 53, :_reduce_11,
  0, 56, :_reduce_none,
  1, 56, :_reduce_13,
  2, 56, :_reduce_14,
  2, 54, :_reduce_15,
  4, 54, :_reduce_16,
  5, 57, :_reduce_17,
  0, 59, :_reduce_none,
  3, 59, :_reduce_19,
  1, 59, :_reduce_20,
  1, 55, :_reduce_21,
  1, 55, :_reduce_22,
  1, 55, :_reduce_23,
  1, 55, :_reduce_24,
  1, 55, :_reduce_25,
  1, 55, :_reduce_26,
  1, 55, :_reduce_27,
  1, 55, :_reduce_28,
  7, 61, :_reduce_29,
  0, 67, :_reduce_none,
  1, 67, :_reduce_31,
  1, 67, :_reduce_32,
  3, 62, :_reduce_33,
  5, 62, :_reduce_34,
  4, 62, :_reduce_35,
  4, 69, :_reduce_36,
  3, 69, :_reduce_37,
  5, 69, :_reduce_38,
  2, 63, :_reduce_39,
  1, 63, :_reduce_40,
  5, 64, :_reduce_41,
  7, 64, :_reduce_42,
  3, 70, :_reduce_43,
  4, 70, :_reduce_44,
  3, 65, :_reduce_45,
  1, 66, :_reduce_46,
  2, 66, :_reduce_47,
  3, 60, :_reduce_48,
  1, 58, :_reduce_49,
  1, 58, :_reduce_50,
  0, 68, :_reduce_none,
  1, 68, :_reduce_52,
  1, 71, :_reduce_none,
  1, 72, :_reduce_54,
  1, 72, :_reduce_55,
  1, 72, :_reduce_56,
  1, 72, :_reduce_57,
  1, 72, :_reduce_58,
  1, 72, :_reduce_59,
  3, 72, :_reduce_60,
  3, 72, :_reduce_61 ]

racc_reduce_n = 62

racc_shift_n = 104

racc_token_table = {
  false => 0,
  :error => 1,
  :LEFT_PAREN => 2,
  :RIGHT_PAREN => 3,
  :COMMA => 4,
  :MINUS => 5,
  :PLUS => 6,
  :SLASH => 7,
  :STAR => 8,
  :SEMICOLON => 9,
  :LEFT_BRACE => 10,
  :DOT => 11,
  :MODULO => 12,
  :NOT => 13,
  :NOT_EQUAL => 14,
  :EQUAL => 15,
  :EQUAL_EQUAL => 16,
  :GREATER => 17,
  :LESS => 18,
  :GREATER_EQUAL => 19,
  :LESS_EQUAL => 20,
  :IDENTIFIER => 21,
  :STRING => 22,
  :NUMBER => 23,
  :CONSTANT => 24,
  :THING => 25,
  :IF => 26,
  :ELSE => 27,
  :DOES => 28,
  :FOR => 29,
  :BLANK => 30,
  :OR => 31,
  :AND => 32,
  :RETURN => 33,
  :SUPER => 34,
  :SELF => 35,
  :VAR => 36,
  :WHILE => 37,
  :FALSE => 38,
  :TRUE => 39,
  :RIGHT_BRACE => 40,
  :BREAK => 41,
  :SWITCH => 42,
  :WHEN => 43,
  :NEXT => 44,
  :AWAIT => 45,
  :YIELD => 46,
  :ELSIF => 47 }

racc_nt_base = 48

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LEFT_PAREN",
  "RIGHT_PAREN",
  "COMMA",
  "MINUS",
  "PLUS",
  "SLASH",
  "STAR",
  "SEMICOLON",
  "LEFT_BRACE",
  "DOT",
  "MODULO",
  "NOT",
  "NOT_EQUAL",
  "EQUAL",
  "EQUAL_EQUAL",
  "GREATER",
  "LESS",
  "GREATER_EQUAL",
  "LESS_EQUAL",
  "IDENTIFIER",
  "STRING",
  "NUMBER",
  "CONSTANT",
  "THING",
  "IF",
  "ELSE",
  "DOES",
  "FOR",
  "BLANK",
  "OR",
  "AND",
  "RETURN",
  "SUPER",
  "SELF",
  "VAR",
  "WHILE",
  "FALSE",
  "TRUE",
  "RIGHT_BRACE",
  "BREAK",
  "SWITCH",
  "WHEN",
  "NEXT",
  "AWAIT",
  "YIELD",
  "ELSIF",
  "$start",
  "program",
  "declarations",
  "declaration",
  "thing_declaration",
  "does_declaration",
  "var_declaration",
  "statement",
  "does_declarations",
  "function",
  "expression",
  "opt_parameters",
  "block",
  "for_stmt",
  "if_statement",
  "return_statement",
  "switch_statement",
  "while_statement",
  "yield_statement",
  "for_initializer",
  "opt_expression",
  "elsif_statement",
  "cases",
  "assignment",
  "primary" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 10)
  def _reduce_2(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 11)
  def _reduce_3(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 12)
  def _reduce_4(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 13)
  def _reduce_5(val, _values, result)
     return val[0]
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 16)
  def _reduce_7(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 17)
  def _reduce_8(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 19)
  def _reduce_9(val, _values, result)
     return Baba::Stmt::Class.new(val[1], nil, val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 20)
  def _reduce_10(val, _values, result)
     return Baba::Stmt::Class.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 22)
  def _reduce_11(val, _values, result)
     return val[1]
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 25)
  def _reduce_13(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 26)
  def _reduce_14(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 28)
  def _reduce_15(val, _values, result)
     return Baba::Stmt::Var.new(val[1], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 29)
  def _reduce_16(val, _values, result)
     return Baba::Stmt::Var.new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 31)
  def _reduce_17(val, _values, result)
     return Baba::Stmt::Function.new(val[0], val[2], val[4])
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 34)
  def _reduce_19(val, _values, result)
     return [val[0], val[2]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 35)
  def _reduce_20(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 37)
  def _reduce_21(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 38)
  def _reduce_22(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 39)
  def _reduce_23(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 40)
  def _reduce_24(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 41)
  def _reduce_25(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 42)
  def _reduce_26(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 43)
  def _reduce_27(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 44)
  def _reduce_28(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 47)
  def _reduce_29(val, _values, result)
          initializer = val[1]
      condition = val[3]
      increment = val[5]
      body = val[6]

      unless increment.nil?
        body = Baba::Stmt::Block.new([body, Baba::Stmt::Expression.new(increment)])
      end

      if condition.nil?
        condition = Baba::Expr::Literal.new(true)
      end

      body = Baba::Stmt::While.new(condition, body)

      unless initializer.nil?
        body = Baba::Stmt::Block.new([initializer, body])
      end

      return body

    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 70)
  def _reduce_31(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 71)
  def _reduce_32(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 73)
  def _reduce_33(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 74)
  def _reduce_34(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 75)
  def _reduce_35(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 77)
  def _reduce_36(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 78)
  def _reduce_37(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 79)
  def _reduce_38(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 81)
  def _reduce_39(val, _values, result)
     return Baba::Stmt::Return.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 82)
  def _reduce_40(val, _values, result)
     return Baba::Stmt::Return.new( nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 84)
  def _reduce_41(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 85)
  def _reduce_42(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 87)
  def _reduce_43(val, _values, result)
     return Baba::Stmt::When.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 88)
  def _reduce_44(val, _values, result)
     return [Baba::Stmt::When.new(val[1], val[2]), val[3]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 90)
  def _reduce_45(val, _values, result)
     return Baba::Stmt::While.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 92)
  def _reduce_46(val, _values, result)
     return Baba::Stmt::Yield.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 93)
  def _reduce_47(val, _values, result)
     return Baba::Stmt::Yield.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 95)
  def _reduce_48(val, _values, result)
     return Baba::Stmt::Block.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 97)
  def _reduce_49(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 98)
  def _reduce_50(val, _values, result)
     return val[0]
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 101)
  def _reduce_52(val, _values, result)
     return val[0]
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 105)
  def _reduce_54(val, _values, result)
     return Baba::Expr::Variable.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 106)
  def _reduce_55(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 107)
  def _reduce_56(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 108)
  def _reduce_57(val, _values, result)
     return Baba::Expr::Literal.new(true)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 109)
  def _reduce_58(val, _values, result)
     return Baba::Expr::Literal.new(false)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 110)
  def _reduce_59(val, _values, result)
     return Baba::Expr::Literal.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 111)
  def _reduce_60(val, _values, result)
     return Baba::Expr::Super.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 112)
  def _reduce_61(val, _values, result)
     return Baba::Expr::Grouping.new(val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class BabaParser
