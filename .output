state 0 contains 20 shift/reduce conflicts
state 21 contains 10 shift/reduce conflicts
state 24 contains 10 shift/reduce conflicts
state 25 contains 20 shift/reduce conflicts
state 28 contains 1 shift/reduce conflicts
state 34 contains 1 shift/reduce conflicts
state 83 contains 1 shift/reduce conflicts
state 88 contains 1 shift/reduce conflicts
state 93 contains 2 shift/reduce conflicts
state 129 contains 1 shift/reduce conflicts
state 132 contains 10 shift/reduce conflicts
state 144 contains 2 shift/reduce conflicts


-------- Grammar --------

rule 1 program: declarations
rule 2 declaration: thing_declaration
rule 3 declaration: does_declaration
rule 4 declaration: var_declaration
rule 5 declaration: statement
rule 6 declarations: 
rule 7 declarations: declaration
rule 8 declarations: declarations declaration
rule 9 thing_declaration: THING CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE
rule 10 thing_declaration: THING CONSTANT LESS CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE
rule 11 does_declaration: DOES function
rule 12 does_declarations: 
rule 13 does_declarations: does_declaration
rule 14 does_declarations: does_declarations does_declaration
rule 15 var_declaration: VAR IDENTIFIER
rule 16 var_declaration: VAR IDENTIFIER EQUAL expression
rule 17 function: IDENTIFIER LEFT_PAREN opt_parameters RIGHT_PAREN block
rule 18 opt_parameters: 
rule 19 opt_parameters: IDENTIFIER
rule 20 opt_parameters: IDENTIFIER COMMA opt_parameters
rule 21 statement: expression
rule 22 statement: for_stmt
rule 23 statement: if_statement
rule 24 statement: return_statement
rule 25 statement: switch_statement
rule 26 statement: while_statement
rule 27 statement: yield_statement
rule 28 statement: block
rule 29 for_stmt: FOR for_initializer COMMA opt_expression COMMA opt_expression statement
rule 30 for_initializer: 
rule 31 for_initializer: var_declaration
rule 32 for_initializer: expression
rule 33 if_statement: IF expression statement
rule 34 if_statement: IF expression statement ELSE statement
rule 35 if_statement: IF expression statement elsif_statement
rule 36 elsif_statement: ELSIF expression statement elsif_statement
rule 37 elsif_statement: ELSIF expression statement
rule 38 elsif_statement: ELSIF expression statement ELSE statement
rule 39 return_statement: RETURN expression
rule 40 return_statement: RETURN
rule 41 switch_statement: SWITCH expression LEFT_BRACE cases RIGHT_BRACE
rule 42 switch_statement: SWITCH expression LEFT_BRACE cases ELSE statement RIGHT_BRACE
rule 43 cases: WHEN expression statement
rule 44 cases: WHEN expression statement cases
rule 45 while_statement: WHILE expression statement
rule 46 yield_statement: YIELD
rule 47 yield_statement: YIELD expression
rule 48 block: LEFT_BRACE declarations RIGHT_BRACE
rule 49 expression: assignment
rule 50 opt_expression: 
rule 51 opt_expression: expression
rule 52 assignment: IDENTIFIER EQUAL assignment
rule 53 assignment: call DOT IDENTIFIER EQUAL assignment
rule 54 assignment: logic_or
rule 55 logic_or: logic_and
rule 56 logic_or: logic_and OR logic_or
rule 57 logic_and: equality
rule 58 logic_and: equality AND logic_and
rule 59 equality: comparison
rule 60 equality: comparison opt_equality equality
rule 61 opt_equality: EQUAL_EQUAL
rule 62 opt_equality: NOT_EQUAL
rule 63 comparison: term
rule 64 comparison: term opt_comparison comparison
rule 65 opt_comparison: GREATER_EQUAL
rule 66 opt_comparison: LESS_EQUAL
rule 67 opt_comparison: GREATER
rule 68 opt_comparison: LESS
rule 69 term: factor
rule 70 term: factor opt_term term
rule 71 opt_term: MINUS
rule 72 opt_term: PLUS
rule 73 factor: unary
rule 74 factor: unary opt_factor factor
rule 75 opt_factor: SLASH
rule 76 opt_factor: STAR
rule 77 opt_factor: MODULO
rule 78 unary: opt_unary unary
rule 79 unary: call
rule 80 opt_unary: MINUS
rule 81 opt_unary: NOT
rule 82 call: primary
rule 83 call: call LEFT_PAREN opt_arguments RIGHT_PAREN
rule 84 call: call DOT IDENTIFIER
rule 85 opt_arguments: 
rule 86 opt_arguments: expression
rule 87 opt_arguments: expression COMMA opt_parameters
rule 88 primary: IDENTIFIER
rule 89 primary: NUMBER
rule 90 primary: STRING
rule 91 primary: TRUE
rule 92 primary: FALSE
rule 93 primary: BLANK
rule 94 primary: SUPER DOT IDENTIFIER
rule 95 primary: LEFT_PAREN expression RIGHT_PAREN

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (48)
    on right: 
    on left : 
  program (49)
    on right: 
    on left : 1
  declarations (50)
    on right: 1 8 48
    on left : 6 7 8
  declaration (51)
    on right: 7 8
    on left : 2 3 4 5
  thing_declaration (52)
    on right: 2
    on left : 9 10
  does_declaration (53)
    on right: 3 13 14
    on left : 11
  var_declaration (54)
    on right: 4 31
    on left : 15 16
  statement (55)
    on right: 5 29 33 34 35 36 37 38 42 43 44 45
    on left : 21 22 23 24 25 26 27 28
  does_declarations (56)
    on right: 9 10 14
    on left : 12 13 14
  function (57)
    on right: 11
    on left : 17
  expression (58)
    on right: 16 21 32 33 34 35 36 37 38 39 41 42 43 44 45 47 51 86 87 95
    on left : 49
  opt_parameters (59)
    on right: 17 20 87
    on left : 18 19 20
  block (60)
    on right: 17 28
    on left : 48
  for_stmt (61)
    on right: 22
    on left : 29
  if_statement (62)
    on right: 23
    on left : 33 34 35
  return_statement (63)
    on right: 24
    on left : 39 40
  switch_statement (64)
    on right: 25
    on left : 41 42
  while_statement (65)
    on right: 26
    on left : 45
  yield_statement (66)
    on right: 27
    on left : 46 47
  for_initializer (67)
    on right: 29
    on left : 30 31 32
  opt_expression (68)
    on right: 29
    on left : 50 51
  elsif_statement (69)
    on right: 35 36
    on left : 36 37 38
  cases (70)
    on right: 41 42 44
    on left : 43 44
  assignment (71)
    on right: 49 52 53
    on left : 52 53 54
  call (72)
    on right: 53 79 83 84
    on left : 82 83 84
  logic_or (73)
    on right: 54 56
    on left : 55 56
  logic_and (74)
    on right: 55 56 58
    on left : 57 58
  equality (75)
    on right: 57 58 60
    on left : 59 60
  comparison (76)
    on right: 59 60 64
    on left : 63 64
  opt_equality (77)
    on right: 60
    on left : 61 62
  term (78)
    on right: 63 64 70
    on left : 69 70
  opt_comparison (79)
    on right: 64
    on left : 65 66 67 68
  factor (80)
    on right: 69 70 74
    on left : 73 74
  opt_term (81)
    on right: 70
    on left : 71 72
  unary (82)
    on right: 73 74 78
    on left : 78 79
  opt_factor (83)
    on right: 74
    on left : 75 76 77
  opt_unary (84)
    on right: 78
    on left : 80 81
  primary (85)
    on right: 82
    on left : 88 89 90 91 92 93 94 95
  opt_arguments (86)
    on right: 83
    on left : 85 86 87

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  LEFT_PAREN (2) 17 83 95
  RIGHT_PAREN (3) 17 83 95
  COMMA (4) 20 29 87
  MINUS (5) 71 80
  PLUS (6) 72
  SLASH (7) 75
  STAR (8) 76
  SEMICOLON (9) 
  LEFT_BRACE (10) 9 10 41 42 48
  DOT (11) 53 84 94
  MODULO (12) 77
  NOT (13) 81
  NOT_EQUAL (14) 62
  EQUAL (15) 16 52 53
  EQUAL_EQUAL (16) 61
  GREATER (17) 67
  LESS (18) 10 68
  GREATER_EQUAL (19) 65
  LESS_EQUAL (20) 66
  IDENTIFIER (21) 15 16 17 19 20 52 53 84 88 94
  STRING (22) 90
  NUMBER (23) 89
  CONSTANT (24) 9 10
  THING (25) 9 10
  IF (26) 33 34 35
  ELSE (27) 34 38 42
  DOES (28) 11
  FOR (29) 29
  BLANK (30) 93
  OR (31) 56
  AND (32) 58
  RETURN (33) 39 40
  SUPER (34) 94
  SELF (35) 
  VAR (36) 15 16
  WHILE (37) 45
  FALSE (38) 92
  TRUE (39) 91
  RIGHT_BRACE (40) 9 10 41 42 48
  BREAK (41) 
  SWITCH (42) 41 42
  WHEN (43) 43 44
  NEXT (44) 
  AWAIT (45) 
  YIELD (46) 46 47
  ELSIF (47) 36 37 38

--------- State ---------

state 0


  LEFT_PAREN    shift, and go to state 46
  LEFT_PAREN    [reduce using rule 6 (declarations)]
  MINUS         shift, and go to state 37
  MINUS         [reduce using rule 6 (declarations)]
  LEFT_BRACE    shift, and go to state 25
  LEFT_BRACE    [reduce using rule 6 (declarations)]
  NOT           shift, and go to state 38
  NOT           [reduce using rule 6 (declarations)]
  IDENTIFIER    shift, and go to state 27
  IDENTIFIER    [reduce using rule 6 (declarations)]
  STRING        shift, and go to state 41
  STRING        [reduce using rule 6 (declarations)]
  NUMBER        shift, and go to state 40
  NUMBER        [reduce using rule 6 (declarations)]
  THING         shift, and go to state 8
  THING         [reduce using rule 6 (declarations)]
  IF            shift, and go to state 20
  IF            [reduce using rule 6 (declarations)]
  DOES          shift, and go to state 9
  DOES          [reduce using rule 6 (declarations)]
  FOR           shift, and go to state 19
  FOR           [reduce using rule 6 (declarations)]
  BLANK         shift, and go to state 44
  BLANK         [reduce using rule 6 (declarations)]
  RETURN        shift, and go to state 21
  RETURN        [reduce using rule 6 (declarations)]
  SUPER         shift, and go to state 45
  SUPER         [reduce using rule 6 (declarations)]
  VAR           shift, and go to state 10
  VAR           [reduce using rule 6 (declarations)]
  WHILE         shift, and go to state 23
  WHILE         [reduce using rule 6 (declarations)]
  FALSE         shift, and go to state 43
  FALSE         [reduce using rule 6 (declarations)]
  TRUE          shift, and go to state 42
  TRUE          [reduce using rule 6 (declarations)]
  SWITCH        shift, and go to state 22
  SWITCH        [reduce using rule 6 (declarations)]
  YIELD         shift, and go to state 24
  YIELD         [reduce using rule 6 (declarations)]
  $default      reduce using rule 6 (declarations)

  program       go to state 1
  declarations  go to state 2
  thing_declaration  go to state 3
  does_declaration  go to state 4
  var_declaration  go to state 5
  statement     go to state 6
  declaration   go to state 7
  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 1


  $end          shift, and go to state 47


state 2

   1) program : declarations _
   8) declarations : declarations _ declaration

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  THING         shift, and go to state 8
  IF            shift, and go to state 20
  DOES          shift, and go to state 9
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  VAR           shift, and go to state 10
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24
  $default      reduce using rule 1 (program)

  thing_declaration  go to state 3
  does_declaration  go to state 4
  var_declaration  go to state 5
  statement     go to state 6
  declaration   go to state 48
  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 3

   2) declaration : thing_declaration _

  $default      reduce using rule 2 (declaration)


state 4

   3) declaration : does_declaration _

  $default      reduce using rule 3 (declaration)


state 5

   4) declaration : var_declaration _

  $default      reduce using rule 4 (declaration)


state 6

   5) declaration : statement _

  $default      reduce using rule 5 (declaration)


state 7

   7) declarations : declaration _

  $default      reduce using rule 7 (declarations)


state 8

   9) thing_declaration : THING _ CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE
  10) thing_declaration : THING _ CONSTANT LESS CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE

  CONSTANT      shift, and go to state 49


state 9

  11) does_declaration : DOES _ function

  IDENTIFIER    shift, and go to state 51

  function      go to state 50

state 10

  15) var_declaration : VAR _ IDENTIFIER
  16) var_declaration : VAR _ IDENTIFIER EQUAL expression

  IDENTIFIER    shift, and go to state 52


state 11

  21) statement : expression _

  $default      reduce using rule 21 (statement)


state 12

  22) statement : for_stmt _

  $default      reduce using rule 22 (statement)


state 13

  23) statement : if_statement _

  $default      reduce using rule 23 (statement)


state 14

  24) statement : return_statement _

  $default      reduce using rule 24 (statement)


state 15

  25) statement : switch_statement _

  $default      reduce using rule 25 (statement)


state 16

  26) statement : while_statement _

  $default      reduce using rule 26 (statement)


state 17

  27) statement : yield_statement _

  $default      reduce using rule 27 (statement)


state 18

  28) statement : block _

  $default      reduce using rule 28 (statement)


state 19

  29) for_stmt : FOR _ for_initializer COMMA opt_expression COMMA opt_expression statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  VAR           shift, and go to state 10
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  $default      reduce using rule 30 (for_initializer)

  for_initializer  go to state 53
  var_declaration  go to state 54
  expression    go to state 55
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 20

  33) if_statement : IF _ expression statement
  34) if_statement : IF _ expression statement ELSE statement
  35) if_statement : IF _ expression statement elsif_statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 56
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 21

  39) return_statement : RETURN _ expression
  40) return_statement : RETURN _

  LEFT_PAREN    shift, and go to state 46
  LEFT_PAREN    [reduce using rule 40 (return_statement)]
  MINUS         shift, and go to state 37
  MINUS         [reduce using rule 40 (return_statement)]
  NOT           shift, and go to state 38
  NOT           [reduce using rule 40 (return_statement)]
  IDENTIFIER    shift, and go to state 27
  IDENTIFIER    [reduce using rule 40 (return_statement)]
  STRING        shift, and go to state 41
  STRING        [reduce using rule 40 (return_statement)]
  NUMBER        shift, and go to state 40
  NUMBER        [reduce using rule 40 (return_statement)]
  BLANK         shift, and go to state 44
  BLANK         [reduce using rule 40 (return_statement)]
  SUPER         shift, and go to state 45
  SUPER         [reduce using rule 40 (return_statement)]
  FALSE         shift, and go to state 43
  FALSE         [reduce using rule 40 (return_statement)]
  TRUE          shift, and go to state 42
  TRUE          [reduce using rule 40 (return_statement)]
  $default      reduce using rule 40 (return_statement)

  expression    go to state 57
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 22

  41) switch_statement : SWITCH _ expression LEFT_BRACE cases RIGHT_BRACE
  42) switch_statement : SWITCH _ expression LEFT_BRACE cases ELSE statement RIGHT_BRACE

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 58
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 23

  45) while_statement : WHILE _ expression statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 59
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 24

  46) yield_statement : YIELD _
  47) yield_statement : YIELD _ expression

  LEFT_PAREN    shift, and go to state 46
  LEFT_PAREN    [reduce using rule 46 (yield_statement)]
  MINUS         shift, and go to state 37
  MINUS         [reduce using rule 46 (yield_statement)]
  NOT           shift, and go to state 38
  NOT           [reduce using rule 46 (yield_statement)]
  IDENTIFIER    shift, and go to state 27
  IDENTIFIER    [reduce using rule 46 (yield_statement)]
  STRING        shift, and go to state 41
  STRING        [reduce using rule 46 (yield_statement)]
  NUMBER        shift, and go to state 40
  NUMBER        [reduce using rule 46 (yield_statement)]
  BLANK         shift, and go to state 44
  BLANK         [reduce using rule 46 (yield_statement)]
  SUPER         shift, and go to state 45
  SUPER         [reduce using rule 46 (yield_statement)]
  FALSE         shift, and go to state 43
  FALSE         [reduce using rule 46 (yield_statement)]
  TRUE          shift, and go to state 42
  TRUE          [reduce using rule 46 (yield_statement)]
  $default      reduce using rule 46 (yield_statement)

  expression    go to state 60
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 25

  48) block : LEFT_BRACE _ declarations RIGHT_BRACE

  LEFT_PAREN    shift, and go to state 46
  LEFT_PAREN    [reduce using rule 6 (declarations)]
  MINUS         shift, and go to state 37
  MINUS         [reduce using rule 6 (declarations)]
  LEFT_BRACE    shift, and go to state 25
  LEFT_BRACE    [reduce using rule 6 (declarations)]
  NOT           shift, and go to state 38
  NOT           [reduce using rule 6 (declarations)]
  IDENTIFIER    shift, and go to state 27
  IDENTIFIER    [reduce using rule 6 (declarations)]
  STRING        shift, and go to state 41
  STRING        [reduce using rule 6 (declarations)]
  NUMBER        shift, and go to state 40
  NUMBER        [reduce using rule 6 (declarations)]
  THING         shift, and go to state 8
  THING         [reduce using rule 6 (declarations)]
  IF            shift, and go to state 20
  IF            [reduce using rule 6 (declarations)]
  DOES          shift, and go to state 9
  DOES          [reduce using rule 6 (declarations)]
  FOR           shift, and go to state 19
  FOR           [reduce using rule 6 (declarations)]
  BLANK         shift, and go to state 44
  BLANK         [reduce using rule 6 (declarations)]
  RETURN        shift, and go to state 21
  RETURN        [reduce using rule 6 (declarations)]
  SUPER         shift, and go to state 45
  SUPER         [reduce using rule 6 (declarations)]
  VAR           shift, and go to state 10
  VAR           [reduce using rule 6 (declarations)]
  WHILE         shift, and go to state 23
  WHILE         [reduce using rule 6 (declarations)]
  FALSE         shift, and go to state 43
  FALSE         [reduce using rule 6 (declarations)]
  TRUE          shift, and go to state 42
  TRUE          [reduce using rule 6 (declarations)]
  SWITCH        shift, and go to state 22
  SWITCH        [reduce using rule 6 (declarations)]
  YIELD         shift, and go to state 24
  YIELD         [reduce using rule 6 (declarations)]
  $default      reduce using rule 6 (declarations)

  thing_declaration  go to state 3
  does_declaration  go to state 4
  var_declaration  go to state 5
  statement     go to state 6
  declaration   go to state 7
  declarations  go to state 61
  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 26

  49) expression : assignment _

  $default      reduce using rule 49 (expression)


state 27

  52) assignment : IDENTIFIER _ EQUAL assignment
  88) primary : IDENTIFIER _

  EQUAL         shift, and go to state 62
  $default      reduce using rule 88 (primary)


state 28

  53) assignment : call _ DOT IDENTIFIER EQUAL assignment
  79) unary : call _
  83) call : call _ LEFT_PAREN opt_arguments RIGHT_PAREN
  84) call : call _ DOT IDENTIFIER

  LEFT_PAREN    shift, and go to state 64
  LEFT_PAREN    [reduce using rule 79 (unary)]
  DOT           shift, and go to state 63
  $default      reduce using rule 79 (unary)


state 29

  54) assignment : logic_or _

  $default      reduce using rule 54 (assignment)


state 30

  55) logic_or : logic_and _
  56) logic_or : logic_and _ OR logic_or

  OR            shift, and go to state 65
  $default      reduce using rule 55 (logic_or)


state 31

  57) logic_and : equality _
  58) logic_and : equality _ AND logic_and

  AND           shift, and go to state 66
  $default      reduce using rule 57 (logic_and)


state 32

  59) equality : comparison _
  60) equality : comparison _ opt_equality equality

  NOT_EQUAL     shift, and go to state 69
  EQUAL_EQUAL   shift, and go to state 68
  $default      reduce using rule 59 (equality)

  opt_equality  go to state 67

state 33

  63) comparison : term _
  64) comparison : term _ opt_comparison comparison

  GREATER       shift, and go to state 73
  LESS          shift, and go to state 74
  GREATER_EQUAL  shift, and go to state 71
  LESS_EQUAL    shift, and go to state 72
  $default      reduce using rule 63 (comparison)

  opt_comparison  go to state 70

state 34

  69) term : factor _
  70) term : factor _ opt_term term

  MINUS         shift, and go to state 76
  MINUS         [reduce using rule 69 (term)]
  PLUS          shift, and go to state 77
  $default      reduce using rule 69 (term)

  opt_term      go to state 75

state 35

  73) factor : unary _
  74) factor : unary _ opt_factor factor

  SLASH         shift, and go to state 79
  STAR          shift, and go to state 80
  MODULO        shift, and go to state 81
  $default      reduce using rule 73 (factor)

  opt_factor    go to state 78

state 36

  78) unary : opt_unary _ unary

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  opt_unary     go to state 36
  unary         go to state 82
  call          go to state 83
  primary       go to state 39

state 37

  80) opt_unary : MINUS _

  $default      reduce using rule 80 (opt_unary)


state 38

  81) opt_unary : NOT _

  $default      reduce using rule 81 (opt_unary)


state 39

  82) call : primary _

  $default      reduce using rule 82 (call)


state 40

  89) primary : NUMBER _

  $default      reduce using rule 89 (primary)


state 41

  90) primary : STRING _

  $default      reduce using rule 90 (primary)


state 42

  91) primary : TRUE _

  $default      reduce using rule 91 (primary)


state 43

  92) primary : FALSE _

  $default      reduce using rule 92 (primary)


state 44

  93) primary : BLANK _

  $default      reduce using rule 93 (primary)


state 45

  94) primary : SUPER _ DOT IDENTIFIER

  DOT           shift, and go to state 85


state 46

  95) primary : LEFT_PAREN _ expression RIGHT_PAREN

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39
  expression    go to state 86

state 47


  $end          shift, and go to state 87


state 48

   8) declarations : declarations declaration _

  $default      reduce using rule 8 (declarations)


state 49

   9) thing_declaration : THING CONSTANT _ LEFT_BRACE does_declarations RIGHT_BRACE
  10) thing_declaration : THING CONSTANT _ LESS CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE

  LEFT_BRACE    shift, and go to state 88
  LESS          shift, and go to state 89


state 50

  11) does_declaration : DOES function _

  $default      reduce using rule 11 (does_declaration)


state 51

  17) function : IDENTIFIER _ LEFT_PAREN opt_parameters RIGHT_PAREN block

  LEFT_PAREN    shift, and go to state 90


state 52

  15) var_declaration : VAR IDENTIFIER _
  16) var_declaration : VAR IDENTIFIER _ EQUAL expression

  EQUAL         shift, and go to state 91
  $default      reduce using rule 15 (var_declaration)


state 53

  29) for_stmt : FOR for_initializer _ COMMA opt_expression COMMA opt_expression statement

  COMMA         shift, and go to state 92


state 54

  31) for_initializer : var_declaration _

  $default      reduce using rule 31 (for_initializer)


state 55

  32) for_initializer : expression _

  $default      reduce using rule 32 (for_initializer)


state 56

  33) if_statement : IF expression _ statement
  34) if_statement : IF expression _ statement ELSE statement
  35) if_statement : IF expression _ statement elsif_statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 93
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 57

  39) return_statement : RETURN expression _

  $default      reduce using rule 39 (return_statement)


state 58

  41) switch_statement : SWITCH expression _ LEFT_BRACE cases RIGHT_BRACE
  42) switch_statement : SWITCH expression _ LEFT_BRACE cases ELSE statement RIGHT_BRACE

  LEFT_BRACE    shift, and go to state 94


state 59

  45) while_statement : WHILE expression _ statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 95
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 60

  47) yield_statement : YIELD expression _

  $default      reduce using rule 47 (yield_statement)


state 61

   8) declarations : declarations _ declaration
  48) block : LEFT_BRACE declarations _ RIGHT_BRACE

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  THING         shift, and go to state 8
  IF            shift, and go to state 20
  DOES          shift, and go to state 9
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  VAR           shift, and go to state 10
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  RIGHT_BRACE   shift, and go to state 96
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  thing_declaration  go to state 3
  does_declaration  go to state 4
  var_declaration  go to state 5
  statement     go to state 6
  declaration   go to state 48
  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 62

  52) assignment : IDENTIFIER EQUAL _ assignment

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  assignment    go to state 97
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 63

  53) assignment : call DOT _ IDENTIFIER EQUAL assignment
  84) call : call DOT _ IDENTIFIER

  IDENTIFIER    shift, and go to state 98


state 64

  83) call : call LEFT_PAREN _ opt_arguments RIGHT_PAREN

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  $default      reduce using rule 85 (opt_arguments)

  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39
  opt_arguments  go to state 99
  expression    go to state 100

state 65

  56) logic_or : logic_and OR _ logic_or

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  logic_and     go to state 30
  logic_or      go to state 101
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 66

  58) logic_and : equality AND _ logic_and

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  equality      go to state 31
  logic_and     go to state 102
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 67

  60) equality : comparison opt_equality _ equality

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  comparison    go to state 32
  equality      go to state 103
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 68

  61) opt_equality : EQUAL_EQUAL _

  $default      reduce using rule 61 (opt_equality)


state 69

  62) opt_equality : NOT_EQUAL _

  $default      reduce using rule 62 (opt_equality)


state 70

  64) comparison : term opt_comparison _ comparison

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  term          go to state 33
  comparison    go to state 104
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 71

  65) opt_comparison : GREATER_EQUAL _

  $default      reduce using rule 65 (opt_comparison)


state 72

  66) opt_comparison : LESS_EQUAL _

  $default      reduce using rule 66 (opt_comparison)


state 73

  67) opt_comparison : GREATER _

  $default      reduce using rule 67 (opt_comparison)


state 74

  68) opt_comparison : LESS _

  $default      reduce using rule 68 (opt_comparison)


state 75

  70) term : factor opt_term _ term

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  factor        go to state 34
  term          go to state 105
  unary         go to state 35
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 76

  71) opt_term : MINUS _

  $default      reduce using rule 71 (opt_term)


state 77

  72) opt_term : PLUS _

  $default      reduce using rule 72 (opt_term)


state 78

  74) factor : unary opt_factor _ factor

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 84
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  unary         go to state 35
  factor        go to state 106
  opt_unary     go to state 36
  call          go to state 83
  primary       go to state 39

state 79

  75) opt_factor : SLASH _

  $default      reduce using rule 75 (opt_factor)


state 80

  76) opt_factor : STAR _

  $default      reduce using rule 76 (opt_factor)


state 81

  77) opt_factor : MODULO _

  $default      reduce using rule 77 (opt_factor)


state 82

  78) unary : opt_unary unary _

  $default      reduce using rule 78 (unary)


state 83

  79) unary : call _
  83) call : call _ LEFT_PAREN opt_arguments RIGHT_PAREN
  84) call : call _ DOT IDENTIFIER

  LEFT_PAREN    shift, and go to state 64
  LEFT_PAREN    [reduce using rule 79 (unary)]
  DOT           shift, and go to state 107
  $default      reduce using rule 79 (unary)


state 84

  88) primary : IDENTIFIER _

  $default      reduce using rule 88 (primary)


state 85

  94) primary : SUPER DOT _ IDENTIFIER

  IDENTIFIER    shift, and go to state 108


state 86

  95) primary : LEFT_PAREN expression _ RIGHT_PAREN

  RIGHT_PAREN   shift, and go to state 109


state 87


  $default      accept


state 88

   9) thing_declaration : THING CONSTANT LEFT_BRACE _ does_declarations RIGHT_BRACE

  DOES          shift, and go to state 9
  DOES          [reduce using rule 12 (does_declarations)]
  $default      reduce using rule 12 (does_declarations)

  does_declarations  go to state 110
  does_declaration  go to state 111

state 89

  10) thing_declaration : THING CONSTANT LESS _ CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE

  CONSTANT      shift, and go to state 112


state 90

  17) function : IDENTIFIER LEFT_PAREN _ opt_parameters RIGHT_PAREN block

  IDENTIFIER    shift, and go to state 114
  $default      reduce using rule 18 (opt_parameters)

  opt_parameters  go to state 113

state 91

  16) var_declaration : VAR IDENTIFIER EQUAL _ expression

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 115
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 92

  29) for_stmt : FOR for_initializer COMMA _ opt_expression COMMA opt_expression statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  $default      reduce using rule 50 (opt_expression)

  opt_expression  go to state 116
  assignment    go to state 26
  expression    go to state 117
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 93

  33) if_statement : IF expression statement _
  34) if_statement : IF expression statement _ ELSE statement
  35) if_statement : IF expression statement _ elsif_statement

  ELSE          shift, and go to state 118
  ELSE          [reduce using rule 33 (if_statement)]
  ELSIF         shift, and go to state 120
  ELSIF         [reduce using rule 33 (if_statement)]
  $default      reduce using rule 33 (if_statement)

  elsif_statement  go to state 119

state 94

  41) switch_statement : SWITCH expression LEFT_BRACE _ cases RIGHT_BRACE
  42) switch_statement : SWITCH expression LEFT_BRACE _ cases ELSE statement RIGHT_BRACE

  WHEN          shift, and go to state 122

  cases         go to state 121

state 95

  45) while_statement : WHILE expression statement _

  $default      reduce using rule 45 (while_statement)


state 96

  48) block : LEFT_BRACE declarations RIGHT_BRACE _

  $default      reduce using rule 48 (block)


state 97

  52) assignment : IDENTIFIER EQUAL assignment _

  $default      reduce using rule 52 (assignment)


state 98

  53) assignment : call DOT IDENTIFIER _ EQUAL assignment
  84) call : call DOT IDENTIFIER _

  EQUAL         shift, and go to state 123
  $default      reduce using rule 84 (call)


state 99

  83) call : call LEFT_PAREN opt_arguments _ RIGHT_PAREN

  RIGHT_PAREN   shift, and go to state 124


state 100

  86) opt_arguments : expression _
  87) opt_arguments : expression _ COMMA opt_parameters

  COMMA         shift, and go to state 125
  $default      reduce using rule 86 (opt_arguments)


state 101

  56) logic_or : logic_and OR logic_or _

  $default      reduce using rule 56 (logic_or)


state 102

  58) logic_and : equality AND logic_and _

  $default      reduce using rule 58 (logic_and)


state 103

  60) equality : comparison opt_equality equality _

  $default      reduce using rule 60 (equality)


state 104

  64) comparison : term opt_comparison comparison _

  $default      reduce using rule 64 (comparison)


state 105

  70) term : factor opt_term term _

  $default      reduce using rule 70 (term)


state 106

  74) factor : unary opt_factor factor _

  $default      reduce using rule 74 (factor)


state 107

  84) call : call DOT _ IDENTIFIER

  IDENTIFIER    shift, and go to state 126


state 108

  94) primary : SUPER DOT IDENTIFIER _

  $default      reduce using rule 94 (primary)


state 109

  95) primary : LEFT_PAREN expression RIGHT_PAREN _

  $default      reduce using rule 95 (primary)


state 110

   9) thing_declaration : THING CONSTANT LEFT_BRACE does_declarations _ RIGHT_BRACE
  14) does_declarations : does_declarations _ does_declaration

  DOES          shift, and go to state 9
  RIGHT_BRACE   shift, and go to state 127

  does_declaration  go to state 128

state 111

  13) does_declarations : does_declaration _

  $default      reduce using rule 13 (does_declarations)


state 112

  10) thing_declaration : THING CONSTANT LESS CONSTANT _ LEFT_BRACE does_declarations RIGHT_BRACE

  LEFT_BRACE    shift, and go to state 129


state 113

  17) function : IDENTIFIER LEFT_PAREN opt_parameters _ RIGHT_PAREN block

  RIGHT_PAREN   shift, and go to state 130


state 114

  19) opt_parameters : IDENTIFIER _
  20) opt_parameters : IDENTIFIER _ COMMA opt_parameters

  COMMA         shift, and go to state 131
  $default      reduce using rule 19 (opt_parameters)


state 115

  16) var_declaration : VAR IDENTIFIER EQUAL expression _

  $default      reduce using rule 16 (var_declaration)


state 116

  29) for_stmt : FOR for_initializer COMMA opt_expression _ COMMA opt_expression statement

  COMMA         shift, and go to state 132


state 117

  51) opt_expression : expression _

  $default      reduce using rule 51 (opt_expression)


state 118

  34) if_statement : IF expression statement ELSE _ statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 133
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 119

  35) if_statement : IF expression statement elsif_statement _

  $default      reduce using rule 35 (if_statement)


state 120

  36) elsif_statement : ELSIF _ expression statement elsif_statement
  37) elsif_statement : ELSIF _ expression statement
  38) elsif_statement : ELSIF _ expression statement ELSE statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 134
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 121

  41) switch_statement : SWITCH expression LEFT_BRACE cases _ RIGHT_BRACE
  42) switch_statement : SWITCH expression LEFT_BRACE cases _ ELSE statement RIGHT_BRACE

  ELSE          shift, and go to state 136
  RIGHT_BRACE   shift, and go to state 135


state 122

  43) cases : WHEN _ expression statement
  44) cases : WHEN _ expression statement cases

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  expression    go to state 137
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 123

  53) assignment : call DOT IDENTIFIER EQUAL _ assignment

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  BLANK         shift, and go to state 44
  SUPER         shift, and go to state 45
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42

  call          go to state 28
  assignment    go to state 138
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 124

  83) call : call LEFT_PAREN opt_arguments RIGHT_PAREN _

  $default      reduce using rule 83 (call)


state 125

  87) opt_arguments : expression COMMA _ opt_parameters

  IDENTIFIER    shift, and go to state 114
  $default      reduce using rule 18 (opt_parameters)

  opt_parameters  go to state 139

state 126

  84) call : call DOT IDENTIFIER _

  $default      reduce using rule 84 (call)


state 127

   9) thing_declaration : THING CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE _

  $default      reduce using rule 9 (thing_declaration)


state 128

  14) does_declarations : does_declarations does_declaration _

  $default      reduce using rule 14 (does_declarations)


state 129

  10) thing_declaration : THING CONSTANT LESS CONSTANT LEFT_BRACE _ does_declarations RIGHT_BRACE

  DOES          shift, and go to state 9
  DOES          [reduce using rule 12 (does_declarations)]
  $default      reduce using rule 12 (does_declarations)

  does_declarations  go to state 140
  does_declaration  go to state 111

state 130

  17) function : IDENTIFIER LEFT_PAREN opt_parameters RIGHT_PAREN _ block

  LEFT_BRACE    shift, and go to state 25

  block         go to state 141

state 131

  20) opt_parameters : IDENTIFIER COMMA _ opt_parameters

  IDENTIFIER    shift, and go to state 114
  $default      reduce using rule 18 (opt_parameters)

  opt_parameters  go to state 142

state 132

  29) for_stmt : FOR for_initializer COMMA opt_expression COMMA _ opt_expression statement

  LEFT_PAREN    shift, and go to state 46
  LEFT_PAREN    [reduce using rule 50 (opt_expression)]
  MINUS         shift, and go to state 37
  MINUS         [reduce using rule 50 (opt_expression)]
  NOT           shift, and go to state 38
  NOT           [reduce using rule 50 (opt_expression)]
  IDENTIFIER    shift, and go to state 27
  IDENTIFIER    [reduce using rule 50 (opt_expression)]
  STRING        shift, and go to state 41
  STRING        [reduce using rule 50 (opt_expression)]
  NUMBER        shift, and go to state 40
  NUMBER        [reduce using rule 50 (opt_expression)]
  BLANK         shift, and go to state 44
  BLANK         [reduce using rule 50 (opt_expression)]
  SUPER         shift, and go to state 45
  SUPER         [reduce using rule 50 (opt_expression)]
  FALSE         shift, and go to state 43
  FALSE         [reduce using rule 50 (opt_expression)]
  TRUE          shift, and go to state 42
  TRUE          [reduce using rule 50 (opt_expression)]
  $default      reduce using rule 50 (opt_expression)

  opt_expression  go to state 143
  assignment    go to state 26
  expression    go to state 117
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 133

  34) if_statement : IF expression statement ELSE statement _

  $default      reduce using rule 34 (if_statement)


state 134

  36) elsif_statement : ELSIF expression _ statement elsif_statement
  37) elsif_statement : ELSIF expression _ statement
  38) elsif_statement : ELSIF expression _ statement ELSE statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 144
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 135

  41) switch_statement : SWITCH expression LEFT_BRACE cases RIGHT_BRACE _

  $default      reduce using rule 41 (switch_statement)


state 136

  42) switch_statement : SWITCH expression LEFT_BRACE cases ELSE _ statement RIGHT_BRACE

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 145
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 137

  43) cases : WHEN expression _ statement
  44) cases : WHEN expression _ statement cases

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 146
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 138

  53) assignment : call DOT IDENTIFIER EQUAL assignment _

  $default      reduce using rule 53 (assignment)


state 139

  87) opt_arguments : expression COMMA opt_parameters _

  $default      reduce using rule 87 (opt_arguments)


state 140

  10) thing_declaration : THING CONSTANT LESS CONSTANT LEFT_BRACE does_declarations _ RIGHT_BRACE
  14) does_declarations : does_declarations _ does_declaration

  DOES          shift, and go to state 9
  RIGHT_BRACE   shift, and go to state 147

  does_declaration  go to state 128

state 141

  17) function : IDENTIFIER LEFT_PAREN opt_parameters RIGHT_PAREN block _

  $default      reduce using rule 17 (function)


state 142

  20) opt_parameters : IDENTIFIER COMMA opt_parameters _

  $default      reduce using rule 20 (opt_parameters)


state 143

  29) for_stmt : FOR for_initializer COMMA opt_expression COMMA opt_expression _ statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 148
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 144

  36) elsif_statement : ELSIF expression statement _ elsif_statement
  37) elsif_statement : ELSIF expression statement _
  38) elsif_statement : ELSIF expression statement _ ELSE statement

  ELSE          shift, and go to state 150
  ELSE          [reduce using rule 37 (elsif_statement)]
  ELSIF         shift, and go to state 120
  ELSIF         [reduce using rule 37 (elsif_statement)]
  $default      reduce using rule 37 (elsif_statement)

  elsif_statement  go to state 149

state 145

  42) switch_statement : SWITCH expression LEFT_BRACE cases ELSE statement _ RIGHT_BRACE

  RIGHT_BRACE   shift, and go to state 151


state 146

  43) cases : WHEN expression statement _
  44) cases : WHEN expression statement _ cases

  WHEN          shift, and go to state 122
  $default      reduce using rule 43 (cases)

  cases         go to state 152

state 147

  10) thing_declaration : THING CONSTANT LESS CONSTANT LEFT_BRACE does_declarations RIGHT_BRACE _

  $default      reduce using rule 10 (thing_declaration)


state 148

  29) for_stmt : FOR for_initializer COMMA opt_expression COMMA opt_expression statement _

  $default      reduce using rule 29 (for_stmt)


state 149

  36) elsif_statement : ELSIF expression statement elsif_statement _

  $default      reduce using rule 36 (elsif_statement)


state 150

  38) elsif_statement : ELSIF expression statement ELSE _ statement

  LEFT_PAREN    shift, and go to state 46
  MINUS         shift, and go to state 37
  LEFT_BRACE    shift, and go to state 25
  NOT           shift, and go to state 38
  IDENTIFIER    shift, and go to state 27
  STRING        shift, and go to state 41
  NUMBER        shift, and go to state 40
  IF            shift, and go to state 20
  FOR           shift, and go to state 19
  BLANK         shift, and go to state 44
  RETURN        shift, and go to state 21
  SUPER         shift, and go to state 45
  WHILE         shift, and go to state 23
  FALSE         shift, and go to state 43
  TRUE          shift, and go to state 42
  SWITCH        shift, and go to state 22
  YIELD         shift, and go to state 24

  expression    go to state 11
  for_stmt      go to state 12
  if_statement  go to state 13
  return_statement  go to state 14
  switch_statement  go to state 15
  while_statement  go to state 16
  yield_statement  go to state 17
  block         go to state 18
  statement     go to state 153
  assignment    go to state 26
  call          go to state 28
  logic_or      go to state 29
  logic_and     go to state 30
  equality      go to state 31
  comparison    go to state 32
  term          go to state 33
  factor        go to state 34
  unary         go to state 35
  opt_unary     go to state 36
  primary       go to state 39

state 151

  42) switch_statement : SWITCH expression LEFT_BRACE cases ELSE statement RIGHT_BRACE _

  $default      reduce using rule 42 (switch_statement)


state 152

  44) cases : WHEN expression statement cases _

  $default      reduce using rule 44 (cases)


state 153

  38) elsif_statement : ELSIF expression statement ELSE statement _

  $default      reduce using rule 38 (elsif_statement)

