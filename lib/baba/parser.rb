#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

require_relative 'stmt'
require_relative 'expr'
require_relative 'lexer'
class BabaParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    48,   138,   120,    37,     9,   152,     9,    90,    25,    78,
    79,    38,    81,    82,   137,    91,   129,    83,   149,    27,
    41,    40,   122,     8,    20,   122,     9,    19,    44,    49,
    48,    21,    47,    37,    10,    23,    43,    42,    25,    45,
    22,    38,    46,    66,    24,    71,    66,    70,    51,    27,
    41,    40,    65,     8,    20,   109,     9,    19,    44,    53,
    48,    21,    47,    37,    10,    23,    43,    42,    25,    45,
    22,    38,    46,    54,    24,    75,    76,    73,    74,    27,
    41,    40,    64,     8,    20,    67,     9,    19,    44,    68,
    48,    21,    47,    37,    10,    23,    43,    42,    25,    45,
    22,    38,    46,    87,    24,    89,    92,    93,    94,    27,
    41,    40,    96,   100,    20,   110,   111,    19,    44,     9,
    48,    21,    47,    37,   114,    23,    43,    42,    25,    45,
    22,    38,    46,   116,    24,   124,   125,   126,   127,    27,
    41,    40,   128,   131,    20,   132,   133,    19,    44,   134,
    48,    21,    47,    37,     9,    23,    43,    42,    25,    45,
    22,    38,    46,    25,    24,   116,   153,   124,   nil,    27,
    41,    40,   nil,     8,    20,   nil,     9,    19,    44,   nil,
   nil,    21,    47,   nil,    10,    23,    43,    42,    98,    45,
    22,   nil,    46,    48,    24,   nil,    37,   nil,   nil,   nil,
   nil,    25,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,    25,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,    25,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,    25,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,    25,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,    25,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    20,   nil,   nil,
    19,    44,   nil,    48,    21,    47,    37,   nil,    23,    43,
    42,   nil,    45,    22,    38,    46,   nil,    24,   nil,   nil,
   nil,   nil,    27,    41,    40,   nil,   nil,    48,   nil,   nil,
    37,    44,   nil,   nil,   nil,    47,   nil,    10,    38,    43,
    42,   nil,    45,   nil,   nil,    46,    27,    41,    40,   nil,
   nil,    48,   nil,   nil,    37,    44,   nil,   nil,   nil,    47,
   nil,   nil,    38,    43,    42,   nil,    45,   nil,   nil,    46,
    27,    41,    40,   nil,   nil,    48,   nil,   nil,    37,    44,
   nil,   nil,   nil,    47,   nil,   nil,    38,    43,    42,   nil,
    45,   nil,   nil,    46,    27,    41,    40,   nil,   nil,    48,
   nil,   nil,    37,    44,   nil,   nil,   nil,    47,   nil,   nil,
    38,    43,    42,   nil,    45,   nil,   nil,    46,    27,    41,
    40,   nil,   nil,    48,   nil,   nil,    37,    44,   nil,   nil,
   nil,    47,   nil,   nil,    38,    43,    42,   nil,    45,   nil,
   nil,    46,    27,    41,    40,   nil,   nil,    48,   nil,   nil,
    37,    44,   nil,   nil,   nil,    47,   nil,   nil,    38,    43,
    42,   nil,    45,   nil,   nil,    46,    86,    41,    40,   nil,
   nil,    48,   nil,   nil,    37,    44,   nil,   nil,   nil,    47,
   nil,   nil,    38,    43,    42,   nil,    45,   nil,   nil,    46,
    27,    41,    40,   nil,   nil,    48,   nil,   nil,    37,    44,
   nil,   nil,   nil,    47,   nil,   nil,    38,    43,    42,   nil,
    45,   nil,   nil,    46,    27,    41,    40,   nil,   nil,    48,
   nil,   nil,    37,    44,   nil,   nil,   nil,    47,   nil,   nil,
    38,    43,    42,   nil,    45,   nil,   nil,    46,    27,    41,
    40,   nil,   nil,    48,   nil,   nil,    37,    44,   nil,   nil,
   nil,    47,   nil,   nil,    38,    43,    42,   nil,    45,   nil,
   nil,    46,    86,    41,    40,   nil,   nil,    48,   nil,   nil,
    37,    44,   nil,   nil,   nil,    47,   nil,   nil,    38,    43,
    42,   nil,    45,   nil,   nil,    46,    86,    41,    40,   nil,
   nil,    48,   nil,   nil,    37,    44,   nil,   nil,   nil,    47,
   nil,   nil,    38,    43,    42,   nil,    45,   nil,   nil,    46,
    86,    41,    40,   nil,   nil,    48,   nil,   nil,    37,    44,
   nil,   nil,   nil,    47,   nil,   nil,    38,    43,    42,   nil,
    45,   nil,   nil,    46,    86,    41,    40,   nil,   nil,    48,
   nil,   nil,    37,    44,   nil,   nil,   nil,    47,   nil,   nil,
    38,    43,    42,   nil,    45,   nil,   nil,    46,    86,    41,
    40,   nil,   nil,    48,   nil,   nil,    37,    44,   nil,   nil,
   nil,    47,   nil,   nil,    38,    43,    42,   nil,    45,   nil,
   nil,    46,    86,    41,    40,   nil,   nil,    48,   nil,   nil,
    37,    44,   nil,   nil,   nil,    47,   nil,   nil,    38,    43,
    42,   nil,    45,   nil,   nil,    46,    27,    41,    40,   nil,
   nil,    48,   nil,   nil,    37,    44,   nil,   nil,   nil,    47,
   nil,   nil,    38,    43,    42,   nil,    45,   nil,   nil,    46,
    27,    41,    40,   nil,   nil,    48,   nil,   nil,    37,    44,
   nil,   nil,   nil,    47,   nil,   nil,    38,    43,    42,   nil,
    45,   nil,   nil,    46,    27,    41,    40,   nil,   nil,    48,
   nil,   nil,    37,    44,   nil,   nil,   nil,    47,   nil,   nil,
    38,    43,    42,   nil,    45,   nil,   nil,    46,    27,    41,
    40,   nil,   nil,    48,   nil,   nil,    37,    44,   nil,   nil,
   nil,    47,   nil,   nil,    38,    43,    42,   nil,    45,   nil,
   nil,    46,    27,    41,    40,   nil,   nil,    48,   nil,   nil,
    37,    44,   nil,   nil,   nil,    47,   nil,   nil,    38,    43,
    42,   nil,    45,   nil,   nil,    46,    27,    41,    40,   nil,
   nil,    48,   nil,   nil,    37,    44,   nil,   nil,   nil,    47,
   nil,   nil,    38,    43,    42,   nil,    45,   nil,   nil,    46,
    27,    41,    40,   nil,   nil,   nil,   nil,   nil,   nil,    44,
   nil,   nil,   nil,    47,   nil,   nil,   nil,    43,    42,   nil,
    45,   nil,   nil,    46 ]

racc_action_check = [
     0,   123,    95,     0,   112,   146,   142,    51,     0,    34,
    34,     0,    35,    35,   123,    51,   112,    35,   142,     0,
     0,     0,    95,     0,     0,   146,     0,     0,     0,     1,
     2,     0,     0,     2,     0,     0,     0,     0,     2,     0,
     0,     2,     0,    28,     0,    32,    85,    32,     8,     2,
     2,     2,    28,     2,     2,    85,     2,     2,     2,     9,
    25,     2,     2,    25,     2,     2,     2,     2,    25,     2,
     2,    25,     2,    10,     2,    33,    33,    33,    33,    25,
    25,    25,    27,    25,    25,    30,    25,    25,    25,    31,
    58,    25,    25,    58,    25,    25,    25,    25,    58,    25,
    25,    58,    25,    47,    25,    49,    53,    54,    55,    58,
    58,    58,    60,    65,    58,    87,    88,    58,    58,    90,
    61,    58,    58,    61,    91,    58,    58,    58,    61,    58,
    58,    61,    58,    92,    58,    96,   100,   101,   102,    61,
    61,    61,   109,   114,    61,   115,   116,    61,    61,   118,
    63,    61,    61,    63,   131,    61,    61,    61,    63,    61,
    61,    63,    61,   132,    61,   133,   147,   148,   nil,    63,
    63,    63,   nil,    63,    63,   nil,    63,    63,    63,   nil,
   nil,    63,    63,   nil,    63,    63,    63,    63,    63,    63,
    63,   nil,    63,   120,    63,   nil,   120,   nil,   nil,   nil,
   nil,   120,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   120,   120,   120,   nil,   nil,   120,   nil,   nil,
   120,   120,   nil,   136,   120,   120,   136,   nil,   120,   120,
   120,   136,   120,   120,   136,   120,   nil,   120,   nil,   nil,
   nil,   nil,   136,   136,   136,   nil,   nil,   136,   nil,   nil,
   136,   136,   nil,   138,   136,   136,   138,   nil,   136,   136,
   136,   138,   136,   136,   138,   136,   nil,   136,   nil,   nil,
   nil,   nil,   138,   138,   138,   nil,   nil,   138,   nil,   nil,
   138,   138,   nil,   139,   138,   138,   139,   nil,   138,   138,
   138,   139,   138,   138,   139,   138,   nil,   138,   nil,   nil,
   nil,   nil,   139,   139,   139,   nil,   nil,   139,   nil,   nil,
   139,   139,   nil,   145,   139,   139,   145,   nil,   139,   139,
   139,   145,   139,   139,   145,   139,   nil,   139,   nil,   nil,
   nil,   nil,   145,   145,   145,   nil,   nil,   145,   nil,   nil,
   145,   145,   nil,   152,   145,   145,   152,   nil,   145,   145,
   145,   152,   145,   145,   152,   145,   nil,   145,   nil,   nil,
   nil,   nil,   152,   152,   152,   nil,   nil,   152,   nil,   nil,
   152,   152,   nil,    19,   152,   152,    19,   nil,   152,   152,
   152,   nil,   152,   152,    19,   152,   nil,   152,   nil,   nil,
   nil,   nil,    19,    19,    19,   nil,   nil,    20,   nil,   nil,
    20,    19,   nil,   nil,   nil,    19,   nil,    19,    20,    19,
    19,   nil,    19,   nil,   nil,    19,    20,    20,    20,   nil,
   nil,    21,   nil,   nil,    21,    20,   nil,   nil,   nil,    20,
   nil,   nil,    21,    20,    20,   nil,    20,   nil,   nil,    20,
    21,    21,    21,   nil,   nil,    22,   nil,   nil,    22,    21,
   nil,   nil,   nil,    21,   nil,   nil,    22,    21,    21,   nil,
    21,   nil,   nil,    21,    22,    22,    22,   nil,   nil,    23,
   nil,   nil,    23,    22,   nil,   nil,   nil,    22,   nil,   nil,
    23,    22,    22,   nil,    22,   nil,   nil,    22,    23,    23,
    23,   nil,   nil,    24,   nil,   nil,    24,    23,   nil,   nil,
   nil,    23,   nil,   nil,    24,    23,    23,   nil,    23,   nil,
   nil,    23,    24,    24,    24,   nil,   nil,    36,   nil,   nil,
    36,    24,   nil,   nil,   nil,    24,   nil,   nil,    36,    24,
    24,   nil,    24,   nil,   nil,    24,    36,    36,    36,   nil,
   nil,    48,   nil,   nil,    48,    36,   nil,   nil,   nil,    36,
   nil,   nil,    48,    36,    36,   nil,    36,   nil,   nil,    36,
    48,    48,    48,   nil,   nil,    64,   nil,   nil,    64,    48,
   nil,   nil,   nil,    48,   nil,   nil,    64,    48,    48,   nil,
    48,   nil,   nil,    48,    64,    64,    64,   nil,   nil,    66,
   nil,   nil,    66,    64,   nil,   nil,   nil,    64,   nil,   nil,
    66,    64,    64,   nil,    64,   nil,   nil,    64,    66,    66,
    66,   nil,   nil,    67,   nil,   nil,    67,    66,   nil,   nil,
   nil,    66,   nil,   nil,    67,    66,    66,   nil,    66,   nil,
   nil,    66,    67,    67,    67,   nil,   nil,    68,   nil,   nil,
    68,    67,   nil,   nil,   nil,    67,   nil,   nil,    68,    67,
    67,   nil,    67,   nil,   nil,    67,    68,    68,    68,   nil,
   nil,    69,   nil,   nil,    69,    68,   nil,   nil,   nil,    68,
   nil,   nil,    69,    68,    68,   nil,    68,   nil,   nil,    68,
    69,    69,    69,   nil,   nil,    72,   nil,   nil,    72,    69,
   nil,   nil,   nil,    69,   nil,   nil,    72,    69,    69,   nil,
    69,   nil,   nil,    69,    72,    72,    72,   nil,   nil,    77,
   nil,   nil,    77,    72,   nil,   nil,   nil,    72,   nil,   nil,
    77,    72,    72,   nil,    72,   nil,   nil,    72,    77,    77,
    77,   nil,   nil,    80,   nil,   nil,    80,    77,   nil,   nil,
   nil,    77,   nil,   nil,    80,    77,    77,   nil,    77,   nil,
   nil,    77,    80,    80,    80,   nil,   nil,    93,   nil,   nil,
    93,    80,   nil,   nil,   nil,    80,   nil,   nil,    93,    80,
    80,   nil,    80,   nil,   nil,    80,    93,    93,    93,   nil,
   nil,    94,   nil,   nil,    94,    93,   nil,   nil,   nil,    93,
   nil,   nil,    94,    93,    93,   nil,    93,   nil,   nil,    93,
    94,    94,    94,   nil,   nil,   122,   nil,   nil,   122,    94,
   nil,   nil,   nil,    94,   nil,   nil,   122,    94,    94,   nil,
    94,   nil,   nil,    94,   122,   122,   122,   nil,   nil,   124,
   nil,   nil,   124,   122,   nil,   nil,   nil,   122,   nil,   nil,
   124,   122,   122,   nil,   122,   nil,   nil,   122,   124,   124,
   124,   nil,   nil,   125,   nil,   nil,   125,   124,   nil,   nil,
   nil,   124,   nil,   nil,   125,   124,   124,   nil,   124,   nil,
   nil,   124,   125,   125,   125,   nil,   nil,   127,   nil,   nil,
   127,   125,   nil,   nil,   nil,   125,   nil,   nil,   127,   125,
   125,   nil,   125,   nil,   nil,   125,   127,   127,   127,   nil,
   nil,   134,   nil,   nil,   134,   127,   nil,   nil,   nil,   127,
   nil,   nil,   134,   127,   127,   nil,   127,   nil,   nil,   127,
   134,   134,   134,   nil,   nil,   nil,   nil,   nil,   nil,   134,
   nil,   nil,   nil,   134,   nil,   nil,   nil,   134,   134,   nil,
   134,   nil,   nil,   134 ]

racc_action_pointer = [
    -2,    29,    28,   nil,   nil,   nil,   nil,   nil,    24,    38,
    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   371,
   395,   419,   443,   467,   491,    58,   nil,    67,    41,   nil,
    54,    57,    31,    58,     4,     5,   515,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,   539,   105,
   nil,    -3,   nil,   104,    92,   104,   nil,   nil,    88,   nil,
   102,   118,   nil,   148,   563,    92,   587,   611,   635,   659,
   nil,   nil,   683,   nil,   nil,   nil,   nil,   707,   nil,   nil,
   731,   nil,   nil,   nil,   nil,    44,   nil,    94,   113,   nil,
    91,   100,   112,   755,   779,   -25,    92,   nil,   nil,   nil,
   121,   134,   134,   nil,   nil,   nil,   nil,   nil,   nil,   121,
   nil,   nil,   -24,   nil,   133,   142,   142,   nil,   145,   nil,
   191,   nil,   803,   -26,   827,   851,   nil,   875,   nil,   nil,
   nil,   126,   153,   144,   899,   nil,   221,   nil,   251,   281,
   nil,   nil,   -22,   nil,   nil,   311,   -22,   126,   124,   nil,
   nil,   nil,   341,   nil,   nil,   nil ]

racc_action_default = [
    -6,   -98,    -1,    -2,    -3,    -4,    -5,    -7,   -98,   -98,
   -98,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -30,
   -98,   -40,   -98,   -98,   -46,    -6,   -49,   -88,   -79,   -54,
   -55,   -57,   -59,   -63,   -69,   -73,   -98,   -80,   -81,   -82,
   -89,   -90,   -91,   -92,   -93,   -94,   -95,   -98,   -98,   -98,
    -8,   -98,   -11,   -98,   -15,   -98,   -31,   -32,   -98,   -39,
   -98,   -98,   -47,   -98,   -98,   -98,   -85,   -98,   -98,   -98,
   -61,   -62,   -98,   -65,   -66,   -67,   -68,   -98,   -71,   -72,
   -98,   -75,   -76,   -77,   -78,   -79,   -88,   -98,   -98,   156,
   -12,   -98,   -18,   -98,   -50,   -33,   -98,   -45,   -48,   -52,
   -84,   -98,   -86,   -56,   -58,   -60,   -64,   -70,   -74,   -98,
   -96,   -97,   -98,   -13,   -98,   -98,   -19,   -16,   -98,   -51,
   -98,   -35,   -98,   -98,   -98,   -98,   -83,   -85,   -84,    -9,
   -14,   -12,   -98,   -18,   -50,   -34,   -98,   -41,   -98,   -98,
   -53,   -87,   -98,   -17,   -20,   -98,   -37,   -98,   -43,   -10,
   -29,   -36,   -98,   -42,   -44,   -38 ]

racc_goto_table = [
    57,    58,    59,    60,    61,    62,    95,   123,    50,    97,
    99,   101,   113,    85,   121,   112,     2,   115,     1,    56,
   118,    52,   143,    55,   103,   104,   105,   106,    69,    88,
   107,    72,   108,    77,   130,    84,    80,   nil,   nil,   nil,
   nil,    63,   nil,   nil,    85,    85,    85,   102,   nil,    85,
   nil,   nil,   nil,   113,    85,   nil,   142,    85,   144,   154,
   145,   nil,   nil,   nil,   130,   151,   nil,   nil,   135,    50,
   nil,   140,   141,   nil,   117,   119,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   146,   nil,   147,   148,   nil,   nil,
   nil,   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,
   155,   nil,   nil,   136,   nil,   139,   nil,   nil,   102,   nil,
   nil,   nil,   nil,   nil,   nil,   119 ]

racc_goto_check = [
    10,    10,    10,    10,    10,    10,     7,    22,     3,     7,
    23,    38,     5,    24,    21,     8,     2,    11,     1,     6,
    20,     9,    12,    19,    25,    26,    27,    28,    29,    10,
    30,    31,    32,    33,     5,    34,    35,   nil,   nil,   nil,
   nil,     2,   nil,   nil,    24,    24,    24,    10,   nil,    24,
   nil,   nil,   nil,     5,    24,   nil,     8,    24,    11,    22,
    20,   nil,   nil,   nil,     5,    21,   nil,   nil,     7,     3,
   nil,    23,    38,   nil,    10,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,     7,     7,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   nil,    10,   nil,    10,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,    18,    16,     6,   nil,   -78,     0,   -52,   -75,    12,
   -19,   -75,  -110,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   -74,   -81,   -89,   -54,   -23,   -43,   -43,   -43,   -45,    -4,
   -47,    -2,   -48,    -1,    -1,     1,   nil,   nil,   -55 ]

racc_goto_default = [
   nil,   nil,   nil,     7,     3,     4,     5,     6,   nil,   nil,
    11,   nil,    18,    12,    13,    14,    15,    16,    17,   nil,
   nil,   nil,   nil,    26,    28,    29,    30,    31,    32,   nil,
    33,   nil,    34,   nil,    35,   nil,    36,    39,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 49, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  0, 50, :_reduce_6,
  1, 50, :_reduce_7,
  2, 50, :_reduce_8,
  5, 52, :_reduce_9,
  7, 52, :_reduce_10,
  2, 53, :_reduce_11,
  0, 56, :_reduce_12,
  1, 56, :_reduce_13,
  2, 56, :_reduce_14,
  2, 54, :_reduce_15,
  4, 54, :_reduce_16,
  5, 57, :_reduce_17,
  0, 59, :_reduce_18,
  1, 59, :_reduce_19,
  3, 59, :_reduce_20,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  7, 61, :_reduce_29,
  0, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  3, 62, :_reduce_33,
  5, 62, :_reduce_34,
  4, 62, :_reduce_35,
  4, 69, :_reduce_36,
  3, 69, :_reduce_37,
  5, 69, :_reduce_38,
  2, 63, :_reduce_39,
  1, 63, :_reduce_40,
  5, 64, :_reduce_41,
  7, 64, :_reduce_42,
  3, 70, :_reduce_43,
  4, 70, :_reduce_44,
  3, 65, :_reduce_45,
  1, 66, :_reduce_46,
  2, 66, :_reduce_47,
  3, 60, :_reduce_48,
  1, 58, :_reduce_none,
  0, 68, :_reduce_none,
  1, 68, :_reduce_none,
  3, 71, :_reduce_52,
  5, 71, :_reduce_53,
  1, 71, :_reduce_none,
  1, 73, :_reduce_none,
  3, 73, :_reduce_56,
  1, 74, :_reduce_none,
  3, 74, :_reduce_58,
  1, 75, :_reduce_none,
  3, 75, :_reduce_60,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 76, :_reduce_none,
  3, 76, :_reduce_64,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 78, :_reduce_none,
  3, 78, :_reduce_70,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 80, :_reduce_none,
  3, 80, :_reduce_74,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  2, 82, :_reduce_78,
  1, 82, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 72, :_reduce_none,
  4, 72, :_reduce_83,
  3, 72, :_reduce_84,
  0, 86, :_reduce_85,
  1, 86, :_reduce_86,
  3, 86, :_reduce_87,
  1, 85, :_reduce_88,
  1, 85, :_reduce_89,
  1, 85, :_reduce_90,
  1, 85, :_reduce_91,
  1, 85, :_reduce_92,
  1, 85, :_reduce_93,
  1, 85, :_reduce_94,
  1, 85, :_reduce_95,
  3, 85, :_reduce_96,
  3, 85, :_reduce_97 ]

racc_reduce_n = 98

racc_shift_n = 156

racc_token_table = {
  false => 0,
  :error => 1,
  :LEFT_PAREN => 2,
  :RIGHT_PAREN => 3,
  :COMMA => 4,
  :MINUS => 5,
  :PLUS => 6,
  :SLASH => 7,
  :STAR => 8,
  :SEMICOLON => 9,
  :LEFT_BRACE => 10,
  :DOT => 11,
  :MODULO => 12,
  :NOT => 13,
  :NOT_EQUAL => 14,
  :EQUAL => 15,
  :EQUAL_EQUAL => 16,
  :GREATER => 17,
  :LESS => 18,
  :GREATER_EQUAL => 19,
  :LESS_EQUAL => 20,
  :IDENTIFIER => 21,
  :STRING => 22,
  :NUMBER => 23,
  :CONSTANT => 24,
  :THING => 25,
  :IF => 26,
  :ELSE => 27,
  :DOES => 28,
  :FOR => 29,
  :BLANK => 30,
  :OR => 31,
  :AND => 32,
  :RETURN => 33,
  :SUPER => 34,
  :SELF => 35,
  :VAR => 36,
  :WHILE => 37,
  :FALSE => 38,
  :TRUE => 39,
  :RIGHT_BRACE => 40,
  :BREAK => 41,
  :SWITCH => 42,
  :WHEN => 43,
  :NEXT => 44,
  :AWAIT => 45,
  :YIELD => 46,
  :ELSIF => 47 }

racc_nt_base = 48

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LEFT_PAREN",
  "RIGHT_PAREN",
  "COMMA",
  "MINUS",
  "PLUS",
  "SLASH",
  "STAR",
  "SEMICOLON",
  "LEFT_BRACE",
  "DOT",
  "MODULO",
  "NOT",
  "NOT_EQUAL",
  "EQUAL",
  "EQUAL_EQUAL",
  "GREATER",
  "LESS",
  "GREATER_EQUAL",
  "LESS_EQUAL",
  "IDENTIFIER",
  "STRING",
  "NUMBER",
  "CONSTANT",
  "THING",
  "IF",
  "ELSE",
  "DOES",
  "FOR",
  "BLANK",
  "OR",
  "AND",
  "RETURN",
  "SUPER",
  "SELF",
  "VAR",
  "WHILE",
  "FALSE",
  "TRUE",
  "RIGHT_BRACE",
  "BREAK",
  "SWITCH",
  "WHEN",
  "NEXT",
  "AWAIT",
  "YIELD",
  "ELSIF",
  "$start",
  "program",
  "declarations",
  "declaration",
  "thing_declaration",
  "does_declaration",
  "var_declaration",
  "statement",
  "does_declarations",
  "function",
  "expression",
  "opt_parameters",
  "block",
  "for_stmt",
  "if_statement",
  "return_statement",
  "switch_statement",
  "while_statement",
  "yield_statement",
  "for_initializer",
  "opt_expression",
  "elsif_statement",
  "cases",
  "assignment",
  "call",
  "logic_or",
  "logic_and",
  "equality",
  "comparison",
  "opt_equality",
  "term",
  "opt_comparison",
  "factor",
  "opt_term",
  "unary",
  "opt_factor",
  "opt_unary",
  "primary",
  "opt_arguments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 15)
  def _reduce_6(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 16)
  def _reduce_7(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 17)
  def _reduce_8(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 19)
  def _reduce_9(val, _values, result)
     return Baba::Stmt::Class.new(val[1], nil, val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 20)
  def _reduce_10(val, _values, result)
     return Baba::Stmt::Class.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 22)
  def _reduce_11(val, _values, result)
     return val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 24)
  def _reduce_12(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 25)
  def _reduce_13(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 26)
  def _reduce_14(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 28)
  def _reduce_15(val, _values, result)
     return Baba::Stmt::Var.new(val[1], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 29)
  def _reduce_16(val, _values, result)
     return Baba::Stmt::Var.new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 31)
  def _reduce_17(val, _values, result)
     return Baba::Stmt::Function.new(val[0], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 33)
  def _reduce_18(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 34)
  def _reduce_19(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 35)
  def _reduce_20(val, _values, result)
     return [val[0], val[2]].flatten
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 46)
  def _reduce_29(val, _values, result)
     return Baba::Stmt::For.new(val[1], val[3], val[5], val[6])
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 52)
  def _reduce_33(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 53)
  def _reduce_34(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 54)
  def _reduce_35(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 56)
  def _reduce_36(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 57)
  def _reduce_37(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 58)
  def _reduce_38(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 60)
  def _reduce_39(val, _values, result)
     return Baba::Stmt::Return.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 61)
  def _reduce_40(val, _values, result)
     return Baba::Stmt::Return.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 63)
  def _reduce_41(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 64)
  def _reduce_42(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 66)
  def _reduce_43(val, _values, result)
     return Baba::Stmt::When.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 67)
  def _reduce_44(val, _values, result)
     return [Baba::Stmt::When.new(val[1], val[2]), val[3]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 69)
  def _reduce_45(val, _values, result)
     return Baba::Stmt::While.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 71)
  def _reduce_46(val, _values, result)
     return Baba::Stmt::Yield.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 72)
  def _reduce_47(val, _values, result)
     return Baba::Stmt::Yield.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 74)
  def _reduce_48(val, _values, result)
     return Baba::Stmt::Block.new(val[1])
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 81)
  def _reduce_52(val, _values, result)
     return Baba::Expr::Assign.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 82)
  def _reduce_53(val, _values, result)
     return Baba::Expr::Set.new(val[0], val[2], val[4])
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 86)
  def _reduce_56(val, _values, result)
     return Baba::Expr::Logical.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 89)
  def _reduce_58(val, _values, result)
     return Baba::Expr::Logical.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 92)
  def _reduce_60(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 98)
  def _reduce_64(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 106)
  def _reduce_70(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 112)
  def _reduce_74(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 118)
  def _reduce_78(val, _values, result)
     return Baba::Expr::Unary.new(val[0], val[1])
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 125)
  def _reduce_83(val, _values, result)
     return Baba::Expr::Call.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 126)
  def _reduce_84(val, _values, result)
     return Baba::Expr::Get.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 128)
  def _reduce_85(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 129)
  def _reduce_86(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 130)
  def _reduce_87(val, _values, result)
     return [val[0], val[2]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 132)
  def _reduce_88(val, _values, result)
     return Baba::Expr::Variable.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 133)
  def _reduce_89(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 134)
  def _reduce_90(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 135)
  def _reduce_91(val, _values, result)
     return Baba::Expr::Literal.new(true)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 136)
  def _reduce_92(val, _values, result)
     return Baba::Expr::Literal.new(false)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 137)
  def _reduce_93(val, _values, result)
     return Baba::Expr::Literal.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 138)
  def _reduce_94(val, _values, result)
     return Baba::Expr::Break.new
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 139)
  def _reduce_95(val, _values, result)
     return Baba::Expr::Next.new
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 140)
  def _reduce_96(val, _values, result)
     return Baba::Expr::Super.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 141)
  def _reduce_97(val, _values, result)
     return Baba::Expr::Grouping.new(val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class BabaParser
