#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

require_relative 'stmt'
require_relative 'expr'
require_relative 'lexer'

class BabaParser < Racc::Parser

module_eval(<<'...end baba_parser.ry/module_eval...', 'baba_parser.ry', 157)
def on_error(error_token_id, error_value, value_stack)
  token = token_to_str(error_token_id)
  string = @ss.string
  line = string.split("\n")[@lineno]
  puts "| Syntax error at #{token} '#{error_value}': line #{@lineno + 1}"
  puts "| #{line}"
  puts "| #{ '~' * line.index(error_value) }#{'^' * error_value.length} HERE"
  raise ParseError.new
end
...end baba_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    52,   143,    95,    39,     9,   125,     9,    53,    27,   157,
    96,    40,    86,    87,   142,    55,   134,    88,   154,    29,
    43,    42,    50,     8,    21,   127,     9,    20,    46,   127,
    57,    23,    51,    49,    10,    25,    45,    44,    71,    47,
    24,    71,    48,    58,    26,    52,    22,    70,    39,    76,
   114,    75,    63,    27,    83,    84,    40,    80,    81,    78,
    79,    69,    72,    73,    29,    43,    42,    50,     8,    21,
    92,     9,    20,    46,    94,    97,    23,    51,    49,    10,
    25,    45,    44,    98,    47,    24,    99,    48,   101,    26,
    52,    22,   105,    39,   115,   116,     9,   119,    27,   121,
   129,    40,   130,   131,   132,   133,   136,   137,   138,    29,
    43,    42,    50,     8,    21,   139,     9,    20,    46,     9,
    27,    23,    51,    49,    10,    25,    45,    44,   121,    47,
    24,   158,    48,   129,    26,    52,    22,   nil,    39,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    43,    42,    50,   nil,    21,
   nil,   nil,    20,    46,   nil,   nil,    23,    51,    49,   nil,
    25,    45,    44,   nil,    47,    24,   nil,    48,   nil,    26,
    52,    22,   nil,    39,   nil,   nil,   nil,   nil,    27,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    43,    42,    50,   nil,    21,   nil,   nil,    20,    46,   nil,
   nil,    23,    51,    49,   nil,    25,    45,    44,   nil,    47,
    24,   nil,    48,   nil,    26,    52,    22,   nil,    39,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    43,    42,    50,     8,    21,
   nil,     9,    20,    46,   nil,   nil,    23,    51,    49,    10,
    25,    45,    44,   103,    47,    24,   nil,    48,   nil,    26,
    52,    22,   nil,    39,   nil,   nil,   nil,   nil,    27,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    43,    42,    50,   nil,    21,   nil,   nil,    20,    46,   nil,
   nil,    23,    51,    49,   nil,    25,    45,    44,   nil,    47,
    24,   nil,    48,   nil,    26,    52,    22,   nil,    39,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    43,    42,    50,   nil,    21,
   nil,   nil,    20,    46,   nil,   nil,    23,    51,    49,   nil,
    25,    45,    44,   nil,    47,    24,   nil,    48,   nil,    26,
    52,    22,   nil,    39,   nil,   nil,   nil,   nil,    27,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    43,    42,    50,   nil,    21,   nil,   nil,    20,    46,   nil,
   nil,    23,    51,    49,   nil,    25,    45,    44,   nil,    47,
    24,   nil,    48,   nil,    26,    52,    22,   nil,    39,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    43,    42,    50,   nil,    21,
   nil,   nil,    20,    46,   nil,   nil,    23,    51,    49,   nil,
    25,    45,    44,   nil,    47,    24,   nil,    48,   nil,    26,
    52,    22,   nil,    39,   nil,   nil,   nil,   nil,    27,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    43,    42,    50,   nil,    21,   nil,   nil,    20,    46,   nil,
   nil,    23,    51,    49,   nil,    25,    45,    44,   nil,    47,
    24,   nil,    48,   nil,    26,    52,    22,   nil,    39,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    43,    42,    50,   nil,    21,
   nil,   nil,    20,    46,   nil,   nil,    23,    51,    49,   nil,
    25,    45,    44,    52,    47,    24,    39,    48,   nil,    26,
   nil,    22,   nil,   nil,    40,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    43,    42,    50,   nil,    52,   nil,   nil,
    39,    46,   nil,   nil,   nil,    51,    49,    10,    40,    45,
    44,   nil,    47,   nil,   nil,    48,    29,    43,    42,    50,
   nil,    52,   nil,   nil,    39,    46,   nil,   nil,   nil,    51,
    49,   nil,    40,    45,    44,   nil,    47,   nil,   nil,    48,
    29,    43,    42,    50,   nil,    52,   nil,   nil,    39,    46,
   nil,   nil,   nil,    51,    49,   nil,    40,    45,    44,   nil,
    47,   nil,   nil,    48,    29,    43,    42,    50,   nil,    52,
   nil,   nil,    39,    46,   nil,   nil,   nil,    51,    49,   nil,
    40,    45,    44,   nil,    47,   nil,   nil,    48,    29,    43,
    42,    50,   nil,    52,   nil,   nil,    39,    46,   nil,   nil,
   nil,    51,    49,   nil,    40,    45,    44,   nil,    47,   nil,
   nil,    48,    29,    43,    42,    50,   nil,    52,   nil,   nil,
    39,    46,   nil,   nil,   nil,    51,    49,   nil,    40,    45,
    44,   nil,    47,   nil,   nil,    48,    91,    43,    42,    50,
   nil,    52,   nil,   nil,    39,    46,   nil,   nil,   nil,    51,
    49,   nil,    40,    45,    44,   nil,    47,   nil,   nil,    48,
    29,    43,    42,    50,   nil,    52,   nil,   nil,    39,    46,
   nil,   nil,   nil,    51,    49,   nil,    40,    45,    44,   nil,
    47,   nil,   nil,    48,    29,    43,    42,    50,   nil,    52,
   nil,   nil,    39,    46,   nil,   nil,   nil,    51,    49,   nil,
    40,    45,    44,   nil,    47,   nil,   nil,    48,    29,    43,
    42,    50,   nil,    52,   nil,   nil,    39,    46,   nil,   nil,
   nil,    51,    49,   nil,    40,    45,    44,   nil,    47,   nil,
   nil,    48,    91,    43,    42,    50,   nil,    52,   nil,   nil,
    39,    46,   nil,   nil,   nil,    51,    49,   nil,    40,    45,
    44,   nil,    47,   nil,   nil,    48,    91,    43,    42,    50,
   nil,    52,   nil,   nil,    39,    46,   nil,   nil,   nil,    51,
    49,   nil,    40,    45,    44,   nil,    47,   nil,   nil,    48,
    91,    43,    42,    50,   nil,    52,   nil,   nil,    39,    46,
   nil,   nil,   nil,    51,    49,   nil,    40,    45,    44,   nil,
    47,   nil,   nil,    48,    91,    43,    42,    50,   nil,    52,
   nil,   nil,    39,    46,   nil,   nil,   nil,    51,    49,   nil,
    40,    45,    44,   nil,    47,   nil,   nil,    48,    91,    43,
    42,    50,   nil,    52,   nil,   nil,    39,    46,   nil,   nil,
   nil,    51,    49,   nil,    40,    45,    44,   nil,    47,   nil,
   nil,    48,    91,    43,    42,    50,   nil,    52,   nil,   nil,
    39,    46,   nil,   nil,   nil,    51,    49,   nil,    40,    45,
    44,   nil,    47,   nil,   nil,    48,    29,    43,    42,    50,
   nil,    52,   nil,   nil,    39,    46,   nil,   nil,   nil,    51,
    49,   nil,    40,    45,    44,   nil,    47,   nil,   nil,    48,
    29,    43,    42,    50,   nil,    52,   nil,   nil,    39,    46,
   nil,   nil,   nil,    51,    49,   nil,    40,    45,    44,   nil,
    47,   nil,   nil,    48,    29,    43,    42,    50,   nil,    52,
   nil,   nil,    39,    46,   nil,   nil,   nil,    51,    49,   nil,
    40,    45,    44,   nil,    47,   nil,   nil,    48,    29,    43,
    42,    50,   nil,    52,   nil,   nil,    39,    46,   nil,   nil,
   nil,    51,    49,   nil,    40,    45,    44,   nil,    47,   nil,
   nil,    48,    29,    43,    42,    50,   nil,    52,   nil,   nil,
    39,    46,   nil,   nil,   nil,    51,    49,   nil,    40,    45,
    44,   nil,    47,   nil,   nil,    48,    29,    43,    42,    50,
   nil,    52,   nil,   nil,    39,    46,   nil,   nil,   nil,    51,
    49,   nil,    40,    45,    44,   nil,    47,   nil,   nil,    48,
    29,    43,    42,    50,   nil,   nil,   nil,   nil,   nil,    46,
   nil,   nil,   nil,    51,    49,   nil,   nil,    45,    44,   nil,
    47,   nil,   nil,    48 ]

racc_action_check = [
     0,   128,    55,     0,   117,   100,   147,     1,     0,   151,
    55,     0,    37,    37,   128,     8,   117,    37,   147,     0,
     0,     0,     0,     0,     0,   100,     0,     0,     0,   151,
     9,     0,     0,     0,     0,     0,     0,     0,    30,     0,
     0,    90,     0,    10,     0,     2,     0,    30,     2,    34,
    90,    34,    22,     2,    36,    36,     2,    35,    35,    35,
    35,    29,    32,    33,     2,     2,     2,     2,     2,     2,
    51,     2,     2,     2,    53,    57,     2,     2,     2,     2,
     2,     2,     2,    58,     2,     2,    59,     2,    65,     2,
    27,     2,    70,    27,    92,    93,    95,    96,    27,    97,
   101,    27,   105,   106,   107,   114,   119,   120,   121,    27,
    27,    27,    27,    27,    27,   123,    27,    27,    27,   136,
   137,    27,    27,    27,    27,    27,    27,    27,   138,    27,
    27,   152,    27,   153,    27,    62,    27,   nil,    62,   nil,
   nil,   nil,   nil,    62,   nil,   nil,    62,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    62,    62,    62,    62,   nil,    62,
   nil,   nil,    62,    62,   nil,   nil,    62,    62,    62,   nil,
    62,    62,    62,   nil,    62,    62,   nil,    62,   nil,    62,
    66,    62,   nil,    66,   nil,   nil,   nil,   nil,    66,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,
    66,    66,    66,   nil,    66,   nil,   nil,    66,    66,   nil,
   nil,    66,    66,    66,   nil,    66,    66,    66,   nil,    66,
    66,   nil,    66,   nil,    66,    68,    66,   nil,    68,   nil,
   nil,   nil,   nil,    68,   nil,   nil,    68,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    68,    68,    68,    68,    68,    68,
   nil,    68,    68,    68,   nil,   nil,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    68,   nil,    68,   nil,    68,
   125,    68,   nil,   125,   nil,   nil,   nil,   nil,   125,   nil,
   nil,   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   125,
   125,   125,   125,   nil,   125,   nil,   nil,   125,   125,   nil,
   nil,   125,   125,   125,   nil,   125,   125,   125,   nil,   125,
   125,   nil,   125,   nil,   125,   141,   125,   nil,   141,   nil,
   nil,   nil,   nil,   141,   nil,   nil,   141,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   141,   141,   141,   141,   nil,   141,
   nil,   nil,   141,   141,   nil,   nil,   141,   141,   141,   nil,
   141,   141,   141,   nil,   141,   141,   nil,   141,   nil,   141,
   143,   141,   nil,   143,   nil,   nil,   nil,   nil,   143,   nil,
   nil,   143,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   143,
   143,   143,   143,   nil,   143,   nil,   nil,   143,   143,   nil,
   nil,   143,   143,   143,   nil,   143,   143,   143,   nil,   143,
   143,   nil,   143,   nil,   143,   144,   143,   nil,   144,   nil,
   nil,   nil,   nil,   144,   nil,   nil,   144,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   144,   144,   144,   144,   nil,   144,
   nil,   nil,   144,   144,   nil,   nil,   144,   144,   144,   nil,
   144,   144,   144,   nil,   144,   144,   nil,   144,   nil,   144,
   150,   144,   nil,   150,   nil,   nil,   nil,   nil,   150,   nil,
   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,
   150,   150,   150,   nil,   150,   nil,   nil,   150,   150,   nil,
   nil,   150,   150,   150,   nil,   150,   150,   150,   nil,   150,
   150,   nil,   150,   nil,   150,   157,   150,   nil,   157,   nil,
   nil,   nil,   nil,   157,   nil,   nil,   157,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   157,   157,   157,   157,   nil,   157,
   nil,   nil,   157,   157,   nil,   nil,   157,   157,   157,   nil,
   157,   157,   157,    20,   157,   157,    20,   157,   nil,   157,
   nil,   157,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    20,    20,    20,    20,   nil,    21,   nil,   nil,
    21,    20,   nil,   nil,   nil,    20,    20,    20,    21,    20,
    20,   nil,    20,   nil,   nil,    20,    21,    21,    21,    21,
   nil,    23,   nil,   nil,    23,    21,   nil,   nil,   nil,    21,
    21,   nil,    23,    21,    21,   nil,    21,   nil,   nil,    21,
    23,    23,    23,    23,   nil,    24,   nil,   nil,    24,    23,
   nil,   nil,   nil,    23,    23,   nil,    24,    23,    23,   nil,
    23,   nil,   nil,    23,    24,    24,    24,    24,   nil,    25,
   nil,   nil,    25,    24,   nil,   nil,   nil,    24,    24,   nil,
    25,    24,    24,   nil,    24,   nil,   nil,    24,    25,    25,
    25,    25,   nil,    26,   nil,   nil,    26,    25,   nil,   nil,
   nil,    25,    25,   nil,    26,    25,    25,   nil,    25,   nil,
   nil,    25,    26,    26,    26,    26,   nil,    38,   nil,   nil,
    38,    26,   nil,   nil,   nil,    26,    26,   nil,    38,    26,
    26,   nil,    26,   nil,   nil,    26,    38,    38,    38,    38,
   nil,    52,   nil,   nil,    52,    38,   nil,   nil,   nil,    38,
    38,   nil,    52,    38,    38,   nil,    38,   nil,   nil,    38,
    52,    52,    52,    52,   nil,    69,   nil,   nil,    69,    52,
   nil,   nil,   nil,    52,    52,   nil,    69,    52,    52,   nil,
    52,   nil,   nil,    52,    69,    69,    69,    69,   nil,    71,
   nil,   nil,    71,    69,   nil,   nil,   nil,    69,    69,   nil,
    71,    69,    69,   nil,    69,   nil,   nil,    69,    71,    71,
    71,    71,   nil,    72,   nil,   nil,    72,    71,   nil,   nil,
   nil,    71,    71,   nil,    72,    71,    71,   nil,    71,   nil,
   nil,    71,    72,    72,    72,    72,   nil,    73,   nil,   nil,
    73,    72,   nil,   nil,   nil,    72,    72,   nil,    73,    72,
    72,   nil,    72,   nil,   nil,    72,    73,    73,    73,    73,
   nil,    74,   nil,   nil,    74,    73,   nil,   nil,   nil,    73,
    73,   nil,    74,    73,    73,   nil,    73,   nil,   nil,    73,
    74,    74,    74,    74,   nil,    77,   nil,   nil,    77,    74,
   nil,   nil,   nil,    74,    74,   nil,    77,    74,    74,   nil,
    74,   nil,   nil,    74,    77,    77,    77,    77,   nil,    82,
   nil,   nil,    82,    77,   nil,   nil,   nil,    77,    77,   nil,
    82,    77,    77,   nil,    77,   nil,   nil,    77,    82,    82,
    82,    82,   nil,    85,   nil,   nil,    85,    82,   nil,   nil,
   nil,    82,    82,   nil,    85,    82,    82,   nil,    82,   nil,
   nil,    82,    85,    85,    85,    85,   nil,    98,   nil,   nil,
    98,    85,   nil,   nil,   nil,    85,    85,   nil,    98,    85,
    85,   nil,    85,   nil,   nil,    85,    98,    98,    98,    98,
   nil,    99,   nil,   nil,    99,    98,   nil,   nil,   nil,    98,
    98,   nil,    99,    98,    98,   nil,    98,   nil,   nil,    98,
    99,    99,    99,    99,   nil,   127,   nil,   nil,   127,    99,
   nil,   nil,   nil,    99,    99,   nil,   127,    99,    99,   nil,
    99,   nil,   nil,    99,   127,   127,   127,   127,   nil,   129,
   nil,   nil,   129,   127,   nil,   nil,   nil,   127,   127,   nil,
   129,   127,   127,   nil,   127,   nil,   nil,   127,   129,   129,
   129,   129,   nil,   130,   nil,   nil,   130,   129,   nil,   nil,
   nil,   129,   129,   nil,   130,   129,   129,   nil,   129,   nil,
   nil,   129,   130,   130,   130,   130,   nil,   132,   nil,   nil,
   132,   130,   nil,   nil,   nil,   130,   130,   nil,   132,   130,
   130,   nil,   130,   nil,   nil,   130,   132,   132,   132,   132,
   nil,   139,   nil,   nil,   139,   132,   nil,   nil,   nil,   132,
   132,   nil,   139,   132,   132,   nil,   132,   nil,   nil,   132,
   139,   139,   139,   139,   nil,   nil,   nil,   nil,   nil,   139,
   nil,   nil,   nil,   139,   139,   nil,   nil,   139,   139,   nil,
   139,   nil,   nil,   139 ]

racc_action_pointer = [
    -2,     7,    43,   nil,   nil,   nil,   nil,   nil,    -9,     9,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   531,   555,    30,   579,   603,   627,   651,    88,   nil,    46,
    36,   nil,    31,    31,    35,    40,    49,     5,   675,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    59,   699,    74,   nil,    -8,   nil,    73,    68,    82,
   nil,   nil,   133,   nil,   nil,    78,   178,   nil,   223,   723,
    71,   747,   771,   795,   819,   nil,   nil,   843,   nil,   nil,
   nil,   nil,   867,   nil,   nil,   891,   nil,   nil,   nil,   nil,
    39,   nil,    73,    92,   nil,    68,    73,    78,   915,   939,
   -22,    57,   nil,   nil,   nil,    87,   100,   100,   nil,   nil,
   nil,   nil,   nil,   nil,    84,   nil,   nil,   -24,   nil,    96,
   104,   104,   nil,   111,   nil,   268,   nil,   963,   -26,   987,
  1011,   nil,  1035,   nil,   nil,   nil,    91,   110,   107,  1059,
   nil,   313,   nil,   358,   403,   nil,   nil,   -22,   nil,   nil,
   448,   -18,    91,    90,   nil,   nil,   nil,   493,   nil,   nil,
   nil ]

racc_action_default = [
    -6,  -102,    -1,    -2,    -3,    -4,    -5,    -7,  -102,  -102,
  -102,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -29,
   -31,  -102,  -102,   -42,  -102,  -102,   -48,    -6,   -51,   -90,
   -81,   -56,   -57,   -59,   -61,   -65,   -71,   -75,  -102,   -82,
   -83,   -84,   -91,   -92,   -93,   -94,   -95,   -96,   -97,   -98,
   -99,  -102,  -102,  -102,    -8,  -102,   -11,  -102,   -15,  -102,
   -32,   -33,  -102,   -40,   -41,  -102,  -102,   -49,  -102,  -102,
  -102,   -87,  -102,  -102,  -102,   -63,   -64,  -102,   -67,   -68,
   -69,   -70,  -102,   -73,   -74,  -102,   -77,   -78,   -79,   -80,
   -81,   -90,  -102,  -102,   161,   -12,  -102,   -18,  -102,   -52,
   -34,  -102,   -47,   -50,   -54,   -86,  -102,   -88,   -58,   -60,
   -62,   -66,   -72,   -76,  -102,  -100,  -101,  -102,   -13,  -102,
  -102,   -19,   -16,  -102,   -53,  -102,   -36,  -102,  -102,  -102,
  -102,   -85,   -87,   -86,    -9,   -14,   -12,  -102,   -18,   -52,
   -35,  -102,   -43,  -102,  -102,   -55,   -89,  -102,   -17,   -20,
  -102,   -38,  -102,   -45,   -10,   -30,   -37,  -102,   -44,   -46,
   -39 ]

racc_goto_table = [
    61,    62,    54,    64,    65,    66,    67,   100,   104,   118,
   106,   102,   128,    90,   126,   117,     2,   120,     1,   123,
    60,    56,   148,    59,   108,   109,   110,   111,    74,   112,
    77,   135,    93,   113,    82,    89,    85,   nil,   nil,   nil,
   nil,   nil,   nil,    68,   nil,   nil,   nil,    90,    90,    90,
   118,   107,    90,   nil,   nil,   nil,   147,    90,   149,   150,
    90,   135,   nil,   nil,   159,   156,   nil,   nil,    54,   145,
   140,   146,   nil,   nil,   nil,   nil,   nil,   nil,   122,   124,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   nil,   152,   153,
   nil,   nil,   nil,   nil,   nil,   155,   nil,   nil,   nil,   nil,
   nil,   nil,   160,   nil,   nil,   nil,   nil,   141,   nil,   144,
   nil,   nil,   107,   nil,   nil,   nil,   nil,   nil,   nil,   124 ]

racc_goto_check = [
    10,    10,     3,    10,    10,    10,    10,     7,    24,     5,
    39,     7,    23,    25,    22,     8,     2,    11,     1,    21,
     6,     9,    12,    20,    26,    27,    28,    29,    30,    31,
    32,     5,    10,    33,    34,    35,    36,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,    25,    25,    25,
     5,    10,    25,   nil,   nil,   nil,     8,    25,    11,    21,
    25,     5,   nil,   nil,    23,    22,   nil,   nil,     3,    24,
     7,    39,   nil,   nil,   nil,   nil,   nil,   nil,    10,    10,
   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,     7,     7,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   nil,   nil,   nil,   nil,    10,   nil,    10,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,    18,    16,     0,   nil,   -86,     0,   -55,   -80,    12,
   -20,   -80,  -115,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   -80,   -86,   -89,   -61,   -25,   -48,   -48,   -48,   -50,
    -6,   -53,    -5,   -52,    -2,    -3,    -1,   nil,   nil,   -61 ]

racc_goto_default = [
   nil,   nil,   nil,     7,     3,     4,     5,     6,   nil,   nil,
    11,   nil,    19,    12,    13,    14,    15,    16,    17,    18,
   nil,   nil,   nil,   nil,    28,    30,    31,    32,    33,    34,
   nil,    35,   nil,    36,   nil,    37,   nil,    38,    41,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 50, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  0, 51, :_reduce_6,
  1, 51, :_reduce_7,
  2, 51, :_reduce_8,
  5, 53, :_reduce_9,
  7, 53, :_reduce_10,
  2, 54, :_reduce_11,
  0, 57, :_reduce_12,
  1, 57, :_reduce_13,
  2, 57, :_reduce_14,
  2, 55, :_reduce_15,
  4, 55, :_reduce_16,
  5, 58, :_reduce_17,
  0, 60, :_reduce_18,
  1, 60, :_reduce_19,
  3, 60, :_reduce_20,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  7, 62, :_reduce_30,
  0, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  3, 63, :_reduce_34,
  5, 63, :_reduce_35,
  4, 63, :_reduce_36,
  4, 71, :_reduce_37,
  3, 71, :_reduce_38,
  5, 71, :_reduce_39,
  2, 64, :_reduce_40,
  2, 65, :_reduce_41,
  1, 65, :_reduce_42,
  5, 66, :_reduce_43,
  7, 66, :_reduce_44,
  3, 72, :_reduce_45,
  4, 72, :_reduce_46,
  3, 67, :_reduce_47,
  1, 68, :_reduce_48,
  2, 68, :_reduce_49,
  3, 61, :_reduce_50,
  1, 59, :_reduce_none,
  0, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 73, :_reduce_54,
  5, 73, :_reduce_55,
  1, 73, :_reduce_none,
  1, 75, :_reduce_none,
  3, 75, :_reduce_58,
  1, 76, :_reduce_none,
  3, 76, :_reduce_60,
  1, 77, :_reduce_none,
  3, 77, :_reduce_62,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 78, :_reduce_none,
  3, 78, :_reduce_66,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 80, :_reduce_none,
  3, 80, :_reduce_72,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 82, :_reduce_none,
  3, 82, :_reduce_76,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  2, 84, :_reduce_80,
  1, 84, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 74, :_reduce_none,
  4, 74, :_reduce_85,
  3, 74, :_reduce_86,
  0, 88, :_reduce_87,
  1, 88, :_reduce_88,
  3, 88, :_reduce_89,
  1, 87, :_reduce_90,
  1, 87, :_reduce_91,
  1, 87, :_reduce_92,
  1, 87, :_reduce_93,
  1, 87, :_reduce_94,
  1, 87, :_reduce_95,
  1, 87, :_reduce_96,
  1, 87, :_reduce_97,
  1, 87, :_reduce_98,
  1, 87, :_reduce_99,
  3, 87, :_reduce_100,
  3, 87, :_reduce_101 ]

racc_reduce_n = 102

racc_shift_n = 161

racc_token_table = {
  false => 0,
  :error => 1,
  :LEFT_PAREN => 2,
  :RIGHT_PAREN => 3,
  :COMMA => 4,
  :MINUS => 5,
  :PLUS => 6,
  :SLASH => 7,
  :STAR => 8,
  :SEMICOLON => 9,
  :LEFT_BRACE => 10,
  :DOT => 11,
  :MODULO => 12,
  :NOT => 13,
  :NOT_EQUAL => 14,
  :EQUAL => 15,
  :EQUAL_EQUAL => 16,
  :GREATER => 17,
  :LESS => 18,
  :GREATER_EQUAL => 19,
  :LESS_EQUAL => 20,
  :IDENTIFIER => 21,
  :STRING => 22,
  :NUMBER => 23,
  :CONSTANT => 24,
  :THING => 25,
  :IF => 26,
  :ELSE => 27,
  :DOES => 28,
  :FOR => 29,
  :BLANK => 30,
  :OR => 31,
  :AND => 32,
  :RETURN => 33,
  :SUPER => 34,
  :SELF => 35,
  :VAR => 36,
  :WHILE => 37,
  :FALSE => 38,
  :TRUE => 39,
  :RIGHT_BRACE => 40,
  :BREAK => 41,
  :SWITCH => 42,
  :WHEN => 43,
  :NEXT => 44,
  :AWAIT => 45,
  :YIELD => 46,
  :ELSIF => 47,
  :INCLUDE => 48 }

racc_nt_base = 49

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LEFT_PAREN",
  "RIGHT_PAREN",
  "COMMA",
  "MINUS",
  "PLUS",
  "SLASH",
  "STAR",
  "SEMICOLON",
  "LEFT_BRACE",
  "DOT",
  "MODULO",
  "NOT",
  "NOT_EQUAL",
  "EQUAL",
  "EQUAL_EQUAL",
  "GREATER",
  "LESS",
  "GREATER_EQUAL",
  "LESS_EQUAL",
  "IDENTIFIER",
  "STRING",
  "NUMBER",
  "CONSTANT",
  "THING",
  "IF",
  "ELSE",
  "DOES",
  "FOR",
  "BLANK",
  "OR",
  "AND",
  "RETURN",
  "SUPER",
  "SELF",
  "VAR",
  "WHILE",
  "FALSE",
  "TRUE",
  "RIGHT_BRACE",
  "BREAK",
  "SWITCH",
  "WHEN",
  "NEXT",
  "AWAIT",
  "YIELD",
  "ELSIF",
  "INCLUDE",
  "$start",
  "program",
  "declarations",
  "declaration",
  "thing_declaration",
  "does_declaration",
  "var_declaration",
  "statement",
  "does_declarations",
  "function",
  "expression",
  "opt_parameters",
  "block",
  "for_stmt",
  "if_statement",
  "include_statement",
  "return_statement",
  "switch_statement",
  "while_statement",
  "yield_statement",
  "for_initializer",
  "opt_expression",
  "elsif_statement",
  "cases",
  "assignment",
  "call",
  "logic_or",
  "logic_and",
  "equality",
  "comparison",
  "opt_equality",
  "term",
  "opt_comparison",
  "factor",
  "opt_term",
  "unary",
  "opt_factor",
  "opt_unary",
  "primary",
  "opt_arguments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 15)
  def _reduce_6(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 16)
  def _reduce_7(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 17)
  def _reduce_8(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 19)
  def _reduce_9(val, _values, result)
     return Baba::Stmt::Class.new(val[1], nil, val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 20)
  def _reduce_10(val, _values, result)
     return Baba::Stmt::Class.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 22)
  def _reduce_11(val, _values, result)
     return val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 24)
  def _reduce_12(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 25)
  def _reduce_13(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 26)
  def _reduce_14(val, _values, result)
     return val[0] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 28)
  def _reduce_15(val, _values, result)
     return Baba::Stmt::Var.new(val[1], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 29)
  def _reduce_16(val, _values, result)
     return Baba::Stmt::Var.new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 31)
  def _reduce_17(val, _values, result)
     return Baba::Stmt::Function.new(val[0], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 33)
  def _reduce_18(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 34)
  def _reduce_19(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 35)
  def _reduce_20(val, _values, result)
     return [val[0], val[2]].flatten
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 47)
  def _reduce_30(val, _values, result)
     return Baba::Stmt::For.new(val[1], val[3], val[5], val[6])
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 53)
  def _reduce_34(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 54)
  def _reduce_35(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 55)
  def _reduce_36(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 57)
  def _reduce_37(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 58)
  def _reduce_38(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 59)
  def _reduce_39(val, _values, result)
     return Baba::Stmt::If.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 61)
  def _reduce_40(val, _values, result)
     return Baba::Stmt::Include.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 63)
  def _reduce_41(val, _values, result)
     return Baba::Stmt::Return.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 64)
  def _reduce_42(val, _values, result)
     return Baba::Stmt::Return.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 66)
  def _reduce_43(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 67)
  def _reduce_44(val, _values, result)
     return Baba::Stmt::Switch.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 69)
  def _reduce_45(val, _values, result)
     return Baba::Stmt::When.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 70)
  def _reduce_46(val, _values, result)
     return [Baba::Stmt::When.new(val[1], val[2]), val[3]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 72)
  def _reduce_47(val, _values, result)
     return Baba::Stmt::While.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 74)
  def _reduce_48(val, _values, result)
     return Baba::Stmt::Yield.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 75)
  def _reduce_49(val, _values, result)
     return Baba::Stmt::Yield.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 77)
  def _reduce_50(val, _values, result)
     return Baba::Stmt::Block.new(val[1])
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 84)
  def _reduce_54(val, _values, result)
     return Baba::Expr::Assign.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 85)
  def _reduce_55(val, _values, result)
     return Baba::Expr::Set.new(val[0], val[2], val[4])
    result
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 89)
  def _reduce_58(val, _values, result)
     return Baba::Expr::Logical.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 92)
  def _reduce_60(val, _values, result)
     return Baba::Expr::Logical.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 95)
  def _reduce_62(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 101)
  def _reduce_66(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 109)
  def _reduce_72(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 115)
  def _reduce_76(val, _values, result)
     return Baba::Expr::Binary.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 121)
  def _reduce_80(val, _values, result)
     return Baba::Expr::Unary.new(val[0], val[1])
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'baba_parser.ry', 128)
  def _reduce_85(val, _values, result)
     return Baba::Expr::Call.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 129)
  def _reduce_86(val, _values, result)
     return Baba::Expr::Get.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 131)
  def _reduce_87(val, _values, result)
     return []
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 132)
  def _reduce_88(val, _values, result)
     return val
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 133)
  def _reduce_89(val, _values, result)
     return [val[0], val[2]].flatten
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 135)
  def _reduce_90(val, _values, result)
     return Baba::Expr::Variable.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 136)
  def _reduce_91(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 137)
  def _reduce_92(val, _values, result)
     return Baba::Expr::Literal.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 138)
  def _reduce_93(val, _values, result)
     return Baba::Expr::Literal.new(true)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 139)
  def _reduce_94(val, _values, result)
     return Baba::Expr::Literal.new(false)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 140)
  def _reduce_95(val, _values, result)
     return Baba::Expr::Literal.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 141)
  def _reduce_96(val, _values, result)
     return Baba::Expr::Break.new
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 142)
  def _reduce_97(val, _values, result)
     return Baba::Expr::Next.new
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 143)
  def _reduce_98(val, _values, result)
     return Baba::Expr::Self.new
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 144)
  def _reduce_99(val, _values, result)
     return Baba::Expr::Variable.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 145)
  def _reduce_100(val, _values, result)
     return Baba::Expr::Super.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'baba_parser.ry', 146)
  def _reduce_101(val, _values, result)
     return Baba::Expr::Grouping.new(val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class BabaParser
